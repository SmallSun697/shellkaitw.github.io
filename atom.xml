<?xml version='1.0' encoding='utf-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://shellkaitw.github.io/</id>
  <title><![CDATA[Shellkai's Blog]]></title>
  <subtitle><![CDATA[Learning from experience.]]></subtitle>
  <icon>https://shellkaitw.github.io/kon-favicon.png</icon>
  <link href="https://shellkaitw.github.io" />
  <link href="https://shellkaitw.github.io/atom.xml" rel="self" type="application/atom+xml" />
  <updated>2024-10-24T08:02:14.743Z</updated>
  <author>
    <name><![CDATA[Shellkai Huang]]></name>
  </author>
  <category term="Web" scheme="https://shellkaitw.github.io/?tags=Web" />
  <category term="SSL" scheme="https://shellkaitw.github.io/?tags=SSL" />
  <category term="OS" scheme="https://shellkaitw.github.io/?tags=OS" />
  <category term="Nginx" scheme="https://shellkaitw.github.io/?tags=Nginx" />
  <category term="Apache2" scheme="https://shellkaitw.github.io/?tags=Apache2" />
  <category term="Windows" scheme="https://shellkaitw.github.io/?tags=Windows" />
  <category term="Linux" scheme="https://shellkaitw.github.io/?tags=Linux" />
  <category term="Hello World" scheme="https://shellkaitw.github.io/?tags=Hello%20World" />
  <category term="Document" scheme="https://shellkaitw.github.io/?tags=Document" />
  <category term="Elements" scheme="https://shellkaitw.github.io/?tags=Elements" />
  <entry>
    <title type="html"><![CDATA[Web]]></title>
    <link href="https://shellkaitw.github.io/certificate-ca-server" />
    <id>https://shellkaitw.github.io/certificate-ca-server</id>
    <published>2023-03-14T00:00:00.000Z</published>
    <updated>2024-09-22T00:00:00.000Z</updated>
    <summary type="html"><![CDATA[Self-Signed Certificate + OpenSSL + ADCS + Nginx & Apache2]]></summary>
    <content type="html">
      <![CDATA[<h2 id="windows-server-簽署-enterprise-ca" data-svelte-h="svelte-fp9yc5"><a href="#windows-server-簽署-enterprise-ca">Windows Server 簽署 (Enterprise CA)</a></h2> <p>安裝 CA Server 提供簽證服務(選擇 Certification Authority 及 Certification Authority Web Enrollment)<img src="https://hackmd.io/_uploads/rJdQha3cn.png" alt="https://hackmd.io/_uploads/rJdQha3cn.png" class="rounded-lg my-2" loading="lazy" decoding="async">使用MMC請求CA簽證<img src="https://hackmd.io/_uploads/HJRbIwVpn.png" alt="https://hackmd.io/_uploads/HJRbIwVpn.png" class="rounded-lg my-2" loading="lazy" decoding="async">選擇Computer account<img src="https://hackmd.io/_uploads/H1-B26292.png" alt="https://hackmd.io/_uploads/H1-B26292.png" class="rounded-lg my-2" loading="lazy" decoding="async">點開 Personal &gt; Certificates再按右鍵選擇 All Tasks &gt; Advanced Operations &gt; Create Custom Request<img src="https://hackmd.io/_uploads/SJ6HnTnq3.png" alt="https://hackmd.io/_uploads/SJ6HnTnq3.png" class="rounded-lg my-2" loading="lazy" decoding="async">選擇 Proceed without enrollment policy<img src="https://hackmd.io/_uploads/SJ28n625h.png" alt="https://hackmd.io/_uploads/SJ28n625h.png" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/SyHwna29h.png" alt="https://hackmd.io/_uploads/SyHwna29h.png" class="rounded-lg my-2" loading="lazy" decoding="async">設定簽證資訊：Details &gt; Properties<img src="https://hackmd.io/_uploads/SkBL8v4p3.png" alt="https://hackmd.io/_uploads/SkBL8v4p3.png" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/ByPO3Th9n.png" alt="https://hackmd.io/_uploads/ByPO3Th9n.png" class="rounded-lg my-2" loading="lazy" decoding="async">到 Subject 欄位加入 Common name 和 DNS (<code data-svelte-h="svelte-1xg83ew">*</code>為目的網域之萬用類型)<img src="https://hackmd.io/_uploads/By9Fn63q2.png" alt="https://hackmd.io/_uploads/By9Fn63q2.png" class="rounded-lg my-2" loading="lazy" decoding="async">到 Private Key 欄位點開 Key options將 Key Size 設為 2048 並勾選 Make private key exportable<img src="https://hackmd.io/_uploads/S1Qchphcn.png" alt="https://hackmd.io/_uploads/S1Qchphcn.png" class="rounded-lg my-2" loading="lazy" decoding="async">使用 Internet Explorer 進行簽證 (<strong data-svelte-h="svelte-iwo5gz">使用 Chrome Engine 的瀏覽器會出現安全性錯誤</strong>)前往<code data-svelte-h="svelte-13zni43">http://[hostname].[domain]/certsrv</code>並輸入帳號密碼選擇 Request a certificate<img src="https://hackmd.io/_uploads/BJ6jPDVpn.png" alt="https://hackmd.io/_uploads/BJ6jPDVpn.png" class="rounded-lg my-2" loading="lazy" decoding="async">選擇 advanced certificate request<img src="https://hackmd.io/_uploads/rkNjhp352.png" alt="https://hackmd.io/_uploads/rkNjhp352.png" class="rounded-lg my-2" loading="lazy" decoding="async">選擇  Submit a certificate request using a base64-encoded CMC or PKCS #10 file, or submit a renewal request by using a base-64-encoded PKCS #7 file.<img src="https://hackmd.io/_uploads/SJTo26n53.png" alt="https://hackmd.io/_uploads/SJTo26n53.png" class="rounded-lg my-2" loading="lazy" decoding="async">打開剛剛建立好的請求檔案<img src="https://hackmd.io/_uploads/SkLhhanqn.png" alt="https://hackmd.io/_uploads/SkLhhanqn.png" class="rounded-lg my-2" loading="lazy" decoding="async">複製並貼至 Internet Explorer 內並將 Certificate Template 類型選擇 Web Server 後按 Submit<img src="https://hackmd.io/_uploads/rkepnTn5n.png" alt="https://hackmd.io/_uploads/rkepnTn5n.png" class="rounded-lg my-2" loading="lazy" decoding="async">生成完畢後，選擇 Download certificate 來下載簽證<img src="https://hackmd.io/_uploads/BkdTh6nqn.png" alt="https://hackmd.io/_uploads/BkdTh6nqn.png" class="rounded-lg my-2" loading="lazy" decoding="async">到 IIS 的 Server Certificate 並選擇 Complete Certificate Request<img src="https://hackmd.io/_uploads/r1rA262q3.png" alt="https://hackmd.io/_uploads/r1rA262q3.png" class="rounded-lg my-2" loading="lazy" decoding="async">導入剛剛下載的簽證，並設定一個 Friendly name<img src="https://hackmd.io/_uploads/HJhA26h52.png" alt="https://hackmd.io/_uploads/HJhA26h52.png" class="rounded-lg my-2" loading="lazy" decoding="async">設定 https 的網站，導入簽證<img src="https://hackmd.io/_uploads/HJNJT63q2.png" alt="https://hackmd.io/_uploads/HJNJT63q2.png" class="rounded-lg my-2" loading="lazy" decoding="async">即完成了簽證，前往目標網站時不會出現安全性錯誤<img src="https://hackmd.io/_uploads/Bknk6p352.png" alt="https://hackmd.io/_uploads/Bknk6p352.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h2 id="debian-簽證使用-windows-server" data-svelte-h="svelte-1rb0la7"><a href="#debian-簽證使用-windows-server">Debian (簽證使用 Windows Server)</a></h2> <p data-svelte-h="svelte-11vzsag">安裝 OpenSSL：<code>apt install openssl</code> <strong>生成帶 SAN 值 CA 憑證的兩種方式方式 1：</strong>一行指令生成帶 SAN 值 CA 請求 (CR)：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>openssl req -new -newkey rsa:2048 -nodes -keyout [keyname].key -out [csrname].csr -subj "/CN=[domainname]/" -addext "subjectAltName = DNS:[dnsname].[domainname],DNS:＊.[domain],DNS:[dnsname]"</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p data-svelte-h="svelte-1byt50y"><strong>方式 2：</strong>建立一個設定 CA 的資料夾並更換目前路徑：<code>mkdir /tmp/CA/</code> <code>cd /tmp/CA</code>生成包含 SAN 的 CA 設定檔並編輯：<code>touch san.conf</code> <code>vim san.conf</code>在 san.conf 內寫入以下資料：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>[ req ]default_bits       = 2048distinguished_name = req_distinguished_namereq_extensions     = req_ext[ req_distinguished_name ]commonName                 = Common Name (e.g. server FQDN or YOUR name)[alt_names]DNS.1   = [ur_dns_server.1]DNS.2   = [ur_dns_server.2]</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p data-svelte-h="svelte-1ypaz3v">儲存後用 OpenSSL 建立 CA 憑證請求：<code>openssl req -out [urcsrname].csr -newkey rsa:2048 -nodes -keyout [urkeyname].key -config san.cnf</code>將 key 放至 apache2 資料夾內：<code>mv [urkeyname].key /etc/apache2</code>將憑證請求放至與 Windows Server 端的共享資料夾內：<code>mv [urcsrname].csr /share</code>在 Windows Server 操作簽署完憑證後，將 Windows 用的 cer 格式轉為 Linux 用的 crt 格式，並將生成結果存於 apache2 資料夾內：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>openssl x509 -in /share/[urcername].cer -out /etc/apache2/[urcrtname].crt -inform DER</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <h2 id="預設-html-網頁設定" data-svelte-h="svelte-1g4mnaq"><a href="#預設-html-網頁設定">預設 html 網頁設定</a></h2> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>vim /var/www/html/index.html</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <h2 id="web-server-apache2" data-svelte-h="svelte-czte7a"><a href="#web-server-apache2">Web Server (apache2)</a></h2> <p data-svelte-h="svelte-1t8euxs">安裝 apache2：<code>apt install apache2</code>重啟 apache2 服務：<code>service apache2 restart</code></p> <h3 id="啟用-https-ssl" data-svelte-h="svelte-1afepzh"><a href="#啟用-https-ssl">啟用 https (SSL)</a></h3> <p data-svelte-h="svelte-1bj1fjz">啟用 SSL &amp; ReWrite Engine</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>a2enmod ssla2enmod rewrite</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p data-svelte-h="svelte-wm8zjk">編輯 apache2 的設定檔：<code>vim /etc/apache2/apache2.conf</code>在文件末端加入以下資料：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>&lt;Directory /var/www/html&gt;AllowOverride All&lt;/Directory&gt;</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p data-svelte-h="svelte-iuw89k">編輯 apache2 的網站設定檔：<code>vim /etc/apache2/sites-avaliable/000-default.conf</code>寫入以下資料：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>&lt;VirtualHost *:443&gt;        ServerAdmin webmaster@localhost        DocumentRoot /var/www/html        ErrorLog $&#123;APACHE_LOG_DIR&#125;/error.log        CustomLog $&#123;APACHE_LOG_DIR&#125;/access.log combined        SSLEngine on        SSLCertificateFile /etc/apache2/[urcrtfile].crt        SSLCertificateKeyFile /etc/apache2/[urkeyfile].key&lt;/VirtualHost&gt;</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p><img src="https://hackmd.io/_uploads/B1vgTT2cn.png" alt="https://hackmd.io/_uploads/B1vgTT2cn.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h3 id="網址重新導向" data-svelte-h="svelte-me9s10"><a href="#網址重新導向">網址重新導向</a></h3> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>// 將 http://www.wsdomain.com.tw/outside 重新導向至 http://outside.out</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p>編輯 apache2 的網站設定檔：<code data-svelte-h="svelte-1lg9tco">vim /etc/apache2/sites-avaliable/000-default.conf</code>加入 <code data-svelte-h="svelte-1osjzt4">Redirect /outside http://www.outside.out</code> <img src="https://hackmd.io/_uploads/rJG-6p39h.png" alt="https://hackmd.io/_uploads/rJG-6p39h.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>// 將 http://www.wsdomain.com.tw 重新導向至 https://www.wsdomain.com.tw</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p data-svelte-h="svelte-iqaaqz">編輯 apache2 的網站設定檔：<code>vim /etc/apache2/sites-avaliable/000-default.conf</code>加入 <code>Redirect / https://www.wsdomain.com.tw</code></p> <h3 id="站台登入驗證" data-svelte-h="svelte-q70sp3"><a href="#站台登入驗證">站台登入驗證</a></h3> <p>建立給 apache2 驗證登入使用者資訊的文件：<code data-svelte-h="svelte-z1llyw">touch /etc/apache2/.htpasswd</code>新增使用者到 htpasswd：<code data-svelte-h="svelte-1ye8t5">htpasswd /etc/apache2/.htpasswd [username]</code> <img src="https://hackmd.io/_uploads/SkdzaRyJA.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">新增後，編輯 apache2 的網站設定檔：<code data-svelte-h="svelte-1lg9tco">vim /etc/apache2/sites-avaliable/000-default.conf</code>加入登入功能，其中 AuthName 是要求登入時會顯示的訊息</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>&lt;Directory /var/www/html&gt;AuthType BasicAuthName [loginmessage]AuthUserFile /etc/apache2/.htpasswdRequire valid-user&lt;/Directory&gt;</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <h3 id="使用者個人網頁模組-userdir" data-svelte-h="svelte-1smh9sa"><a href="#使用者個人網頁模組-userdir">使用者個人網頁模組 (userdir)</a></h3> <p>啟用模組：<code data-svelte-h="svelte-zymyuo">a2enmod userdir</code>編輯模組設定檔：<code data-svelte-h="svelte-1lanh7d">vim /etc/apache2/mods-enabled/userdir.conf</code> <img src="https://hackmd.io/_uploads/SkPT4vlAT.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">其中第一行的意思是站台會存取使用者目錄中 html 資料夾內的檔案，若使用者目錄中沒有此資料夾則網頁會顯示「Not Found」，預設值是 public_html第二行是不為哪些使用者啟用站台，預設值是 root 使用者若啟用了該模組，也要記得將目錄的權限更改為755：<code data-svelte-h="svelte-16n9ba8">chmod -R 755 /[homedir]/[webdir]</code></p> <h3 id="更換-port" data-svelte-h="svelte-1k2hrhy"><a href="#更換-port">更換 Port</a></h3> <p>編輯 Port 設定檔：<code data-svelte-h="svelte-2fua5s">vim /etc/apache2/port.conf</code> <img src="https://hackmd.io/_uploads/rySLPmSmT.png" alt="image.png" class="rounded-lg my-2" loading="lazy" decoding="async">如果要改 http 的 Port：將 80 改成你要的 Port如果要改 https 的 Port：將 443 (兩個) 改成你要的 Port最後編輯網站設定檔：<code data-svelte-h="svelte-1lg9tco">vim /etc/apache2/sites-avaliable/000-default.conf</code> <img src="https://hackmd.io/_uploads/r1q8dmrXa.png" alt="image.png" class="rounded-lg my-2" loading="lazy" decoding="async">將最上方的 80 改成你要的 Port</p> <h3 id="更換站台" data-svelte-h="svelte-gq3x42"><a href="#更換站台">更換站台</a></h3> <p data-svelte-h="svelte-1e9ab83">先關閉預設站台：<code>a2dissite 000-default.conf</code>再啟用你要的站台：<code>a2ensite [ursitename]</code></p> <h3 id="預設檔案" data-svelte-h="svelte-129yhep"><a href="#預設檔案">預設檔案</a></h3> <p data-svelte-h="svelte-13zi9ur">若網頁檔名不是 index.html 或 index.htm 需要設定預設檔案名稱，開啟設定檔：<code>vim /etc/apache2/apache2.conf</code></p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>&lt;Directory $PATH$&gt;    DirectoryIndex [filename]&lt;/Directory&gt;</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p><img src="https://hackmd.io/_uploads/rka5bPgC6.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h3 id="403-forbidden-解決" data-svelte-h="svelte-p1ypgn"><a href="#403-forbidden-解決">403 Forbidden 解決</a></h3> <p>在更改站台路徑後可能會出現 403 Forbidden 的問題<img src="https://hackmd.io/_uploads/S1RlxPg0a.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">開啟設定檔：<code data-svelte-h="svelte-2i1yor">vim /etc/apache2/apache2.conf</code></p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>&lt;Directory $PATH$&gt;    Options Indexes FollowSymLinks    AllowOverride None    Require all granted&lt;/Directory&gt;</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p><img src="https://hackmd.io/_uploads/HkNrQLRRp.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">設定後重啟 apache2：<code data-svelte-h="svelte-175m26">service apache2 restart</code></p> <h2 id="web-server-nginx" data-svelte-h="svelte-1hkupka"><a href="#web-server-nginx">Web Server (Nginx)</a></h2> <p data-svelte-h="svelte-vhz1f4">安裝 Nginx：<code>apt install nginx</code>重啟 Nginx 服務：<code>service nginx restart</code></p> <h3 id="nginxconf-檢查" data-svelte-h="svelte-1s452vj"><a href="#nginxconf-檢查">nginx.conf 檢查</a></h3> <p data-svelte-h="svelte-1hzw9l6"><code>nginx -t</code></p> <h3 id="限制-ip-存取站台" data-svelte-h="svelte-1qqr7ic"><a href="#限制-ip-存取站台">限制 IP 存取站台</a></h3> <p data-svelte-h="svelte-ptd6cj">編輯 Nginx 的網站設定檔：<code>vim /etc/nginx/sites-available/default</code>編輯 server 區域下的 location 區域：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code># 黑名單設定方法location / &#123;deny 192.168.10.55;deny 192.168.1.0/24;&#125;# 白名單設定方法location / &#123;allow 192.168.10.55;allow 192.168.1.0/24;deny all; #需要禁止全部 IP 存取才可設定白名單 (預設為 allow all)&#125;</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p>註：這裡設定有先後的層級之分，若在白名單內把deny all寫在allow的前面會使allow設定不運作若站台存取遭拒會顯示：<img src="https://hackmd.io/_uploads/SkdwHlNeT.png" alt="https://hackmd.io/_uploads/SkdwHlNeT.png" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/rJwKoyVga.png" alt="https://hackmd.io/_uploads/rJwKoyVga.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h3 id="站台登入驗證-1" data-svelte-h="svelte-2ju6fb"><a href="#站台登入驗證-1">站台登入驗證</a></h3> <p data-svelte-h="svelte-1uftmpj">安裝 apache2-utils (會使用到 htpasswd 指令)：<code>apt install apache2-utils</code>建立給 Nginx 驗證登入使用者資訊的文件：<code>touch /etc/nginx/.htpasswd</code>新增使用者到 htpasswd：<code>htpasswd /etc/nginx/.htpasswd [username]</code>新增後，編輯 Nginx 的網站設定檔：<code>vim /etc/nginx/sites-available/default</code>加入登入功能到 location 區塊，其中 auth_basic 是要求登入時會顯示的訊息：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>location / &#123;        auth_basic "[loginmessage]";        auth_basic_user_file /etc/nginx/.htpasswd;        &#125;</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <h3 id="啟用-https-ssl-1" data-svelte-h="svelte-1gspjf5"><a href="#啟用-https-ssl-1">啟用 https (SSL)</a></h3> <p data-svelte-h="svelte-9v15ui">編輯 Nginx 的網站設定檔：<code>vim /etc/nginx/sites-available/default</code>在 server 區塊下設定 SSL：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>server &#123;    # SSL configuratuion    listen 443 ssl default_server;    listen [::]:443 ssl default_server;    ssl_certificate /etc/nginx/[urcrtfile].crt;    ssl_certificate_key /etc/nginx/[urkeyfile].key;&#125;</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p><img src="https://hackmd.io/_uploads/ry9yNBNlp.png" alt="https://hackmd.io/_uploads/ry9yNBNlp.png" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/BkQEIB4lT.png" alt="https://hackmd.io/_uploads/BkQEIB4lT.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h3 id="網址重新導向-1" data-svelte-h="svelte-v7fgf4"><a href="#網址重新導向-1">網址重新導向</a></h3> <p data-svelte-h="svelte-1thil54">編輯 Nginx 的網站設定檔：<code>vim /etc/nginx/sites-available/default</code>在 location 區塊下設定：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code># 當存取 test.com 時會重新導向至 redirect.comlocation / &#123;    return 301 http://redirect.com;&#125;</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p><img src="https://hackmd.io/_uploads/r1ycdB4lT.png" alt="https://hackmd.io/_uploads/r1ycdB4lT.png" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/BynrFHVgT.png" alt="https://hackmd.io/_uploads/BynrFHVgT.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h3 id="http-to-https-重新導向" data-svelte-h="svelte-1gnl6cu"><a href="#http-to-https-重新導向">http to https 重新導向</a></h3> <p>與前面重新導向相似，但是需要將 http 和 https 站台分開來寫<img src="https://hackmd.io/_uploads/ryx5ruBd0.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">在 http 的站台內寫 <code data-svelte-h="svelte-1x48b96">return</code> 到 https<strong data-svelte-h="svelte-1jfvoe2">注意：不是寫在 location 區塊內</strong>若一個站台對到多個 DNS 紀錄可以寫為</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>return 301 https://$host$request_uri;</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <h3 id="負載平衡分流-load-balance" data-svelte-h="svelte-gumo5e"><a href="#負載平衡分流-load-balance">負載平衡/分流 (Load Balance)</a></h3> <p data-svelte-h="svelte-8sojpg">編輯 Nginx 的網站設定檔：<code>vim /etc/nginx/sites-available/default</code>新增 upstream 區塊並編輯 server 區塊：</p> <!-- HTML_TAG_START --><pre class="shiki material-default"><div class='code-container'><code>upstream [load_balance_URL] &#123;    server [server1]:[port];    server [server2]:[port];    ...&#125;location / &#123;    proxy_pass http://[load_balance_URL];&#125;</code></div></pre><!-- Note from shiki-twoslash: the language bash= was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p><img src="https://hackmd.io/_uploads/ByAIZpGpp.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <p>若要監察存取紀錄可以在站台檔案的開頭新增 log 格式，並在 server 區塊新增 <code data-svelte-h="svelte-7rufrc">access_log /var/log/nginx/access.log upstreamlog;</code>：<img src="https://hackmd.io/_uploads/HJyGL6Maa.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">註：最後的<code data-svelte-h="svelte-jx4t1d">upstreamlog</code>指的是給 log 的格式名稱再用指令<code data-svelte-h="svelte-cw2vgg">tail -f /var/log/nginx/access.log</code> 實時監察站台存取紀錄：<img src="https://hackmd.io/_uploads/S1IqXCGpa.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">只要出現設定檔中的多個 IP 就代表負載設定成功</p> <h3 id="更換站台-1" data-svelte-h="svelte-12gthyy"><a href="#更換站台-1">更換站台</a></h3> <p>編輯 Nginx 設定檔：<code data-svelte-h="svelte-ijz9n">vim /etc/nginx/nginx.conf</code>找到 <code data-svelte-h="svelte-cuvryw">include /etc/nginx/sites-enables/*;</code> <img src="https://hackmd.io/_uploads/S1rkLCfa6.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">可以自行新增或編輯，讓 <code data-svelte-h="svelte-1pwnvq6">include</code> 後面接自己站台的路徑，並把預設站台移除</p> <h3 id="location-匹配選擇機制" data-svelte-h="svelte-1eyry6s"><a href="#location-匹配選擇機制">location (匹配選擇機制)</a></h3> <p data-svelte-h="svelte-1ty9fel">僅使用<code>/</code>表示一般配置 (最長路徑)，會<strong>搜尋全部的 location 後才挑選出最符合請求路徑的配置檔</strong> (有可能被其它規則攔截)</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>    # 最基本的設定，會匹配到所有 http://www.domain.com 的請求，但是優先順序會被排到正規表示法和最長路徑之後    # 例如 http://www.domain.com/abc 或 http://www.domain.com/bruh 兩者皆可符合該規則     location / &#123;        ....    &#125;    # 匹配到以 /news 開頭的所有請求，但還不會馬上採用，會繼續往下搜尋是否有較長符合路徑的項目    location /news &#123;        ....    &#125;    # 匹配到以 /news/taiwan 開頭的所有請求，也是不會馬上採用，但若是有來自 http://www.domain.com/news/taiwan/... 開頭的請求，則會取代上面 /news 配置成為優先保留項再繼續往下搜尋    location /news/taiwan &#123;        ....    &#125;    # 匹配到以 /news/taiwan/keelung 開頭的所有請求，也是不會馬上採用，分為以下兩個情境    # 1. 來自 http://www.domain.com/news/taiwan/hsinchu 開頭的請求，依然會採用上面 /news/taiwan 的配置然後繼續往下搜尋    # 2. 來自 http://www.domain.com/news/taiwan/keelung 開頭的請求，則會取代上面 /news/taiwan 的配置成為新的優先保留項然後才再繼續往下搜尋    location /news/taiwan/keelung &#123;        ....    &#125;</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p data-svelte-h="svelte-ebm0tg">使用<code>= /</code>代表精準匹配，需<strong>完全符合且匹配，確認後立即採用</strong></p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>    # 只能 http://www.domain.com 才能符合，後面不能帶任何字元，e.g. http://www.domain.com (O), http://www.domain.com/abc (X)    location = / &#123;        ....    &#125;    # 來自 http://www.domain.com/news/taiwan/taipei 的要求會立即採用此配置    location = /news/taiwan/taipei &#123;        ....    &#125;</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p data-svelte-h="svelte-196y3so">使用<code>~ /</code>代表使用正規表示法來做匹配，會<strong>區分大小寫</strong>，若要<strong>不區分大小寫需使用</strong><code>~* /</code>，由於第一個匹配到的規則設定會立即採用，所以採用此種方式的配置其順序很重要</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>    # 1. 來自 http://www.domain.com/images 開頭的要求會匹配此規則且立即採用該配置，但 http://www.domain.com/Images 開頭的要求則不符合該規則    location ~ ^/images &#123;        ....    &#125;    # 來自 http://www.domain.com/images 和 http://www.domain.com/Images 開頭的要求皆能符合此規則且會立即採用該配置    location ~* ^/images &#123;        ....    &#125;    # 匹配所有以 .gif 和 .jpg 和 .jpeg 結尾的要求，這邊分兩個情境來說明    # 1. 來自 http://www.domain.com/Images/dog.jpg 的請求雖然符合該配置的規則，但是卻會先被上面的 ~* ^/images 這條規則先攔截，因此該請求其實是到不了這條規則的    # 2. 來自 http://www.domain.com/news/images/cat.gif 的請求符合該配置的規則且沒在其它地方被攔截，所以會立即採用該配置    location ~* .(gif|jpg|jpeg)$ &#123;        ....    &#125;    # 匹配所有 URI 路徑以 admin 和 swagger 和 api 開頭的要求，這邊分兩個情境來說明    # 例如來自 http://www.domain.com/admin/... 或 http://www.domain.com/Admin/... 開頭的請求皆符合此規則且會立即採用該配置    location ~* ^/(admin|swagger|api)/? &#123;        ....    &#125;  </code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p data-svelte-h="svelte-1npotiy">使用<code>^~</code>代表排除正規表示法的匹配，類似於一般配置，不同的是一旦符合即馬上採用該配置</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>    # 匹配到所有請求，但還不會馬上採用，會繼續往下搜尋是否有其它較長符合路徑的項目    location / &#123;        ....    &#125;    # 匹配到以 /news 開頭的所有請求，但還不會馬上採用，會繼續往下搜尋是否有較長符合路徑的項目    location /news &#123;        ....    &#125;    # 匹配到以 /news/taiwan 開頭的所有請求，因為使用了 ^~ 所以如果有符合 /news/taiwan 開頭的 URI 會立即採用該配置，停止往下搜尋    # 1. 來自 http://www.domain.com/news/taiwan/keelung/index 的請求符合該配置的規則，所以採用該配置    # 2. 來自 http://www.domain.com/news/japan/osaka/index 的請求不符合該配置的規則，繼續往下搜尋    location ^~ /news/taiwan &#123;        ....    &#125;    # 匹配到以 /news/japan 開頭的所有請求，但還不會馬上採用，會繼續往下搜尋是否有較長符合路徑的項目    location /news/japan &#123;        ....    &#125;</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <div class="overflow-x-auto mb-4"><table class="table w-full"><thead data-svelte-h="svelte-10be3iz"><tr><th>參數</th> <th>說明</th> <th>是否立即採用</th></tr></thead> <tbody data-svelte-h="svelte-1hqfv7t"><tr><td>/</td> <td>最長路徑</td> <td>否</td></tr> <tr><td>= /</td> <td>精準匹配</td> <td>是</td></tr> <tr><td>^~ /</td> <td>類似最長路徑，但會馬上採用</td> <td>是</td></tr> <tr><td>~ /</td> <td>正規表示法，區分大小寫</td> <td>是</td></tr> <tr><td>~* /</td> <td>正規表示法，不區分大小寫</td> <td>是</td></tr></tbody></table></div>]]>
    </content>
    <category term="Web" scheme="https://shellkaitw.github.io/?tags=Web" />
    <category term="SSL" scheme="https://shellkaitw.github.io/?tags=SSL" />
    <category term="OS" scheme="https://shellkaitw.github.io/?tags=OS" />
    <category term="Nginx" scheme="https://shellkaitw.github.io/?tags=Nginx" />
    <category term="Apache2" scheme="https://shellkaitw.github.io/?tags=Apache2" />
  </entry>
  <entry>
    <title type="html"><![CDATA[Windows Server]]></title>
    <link href="https://shellkaitw.github.io/winsrv" />
    <id>https://shellkaitw.github.io/winsrv</id>
    <published>2023-02-06T00:00:00.000Z</published>
    <updated>2024-09-22T00:00:00.000Z</updated>
    <summary type="html"><![CDATA[Hardening write up]]></summary>
    <content type="html">
      <![CDATA[<h2 id="gpo-相關安全強化" data-svelte-h="svelte-i2sykg"><a href="#gpo-相關安全強化">GPO 相關安全強化</a></h2> <h3 id="禁止存取控制台設定" data-svelte-h="svelte-1xaqksb"><a href="#禁止存取控制台設定">禁止存取控制台設定</a></h3> <p>GPO -&gt; User Configuration -&gt; Policies -&gt; Administrative Templetes -&gt; Control Panel -&gt; 設定 Prohibit access to Control Panel and PC settings 為 <strong data-svelte-h="svelte-tra0oh">Enabled</strong> <img src="https://hackmd.io/_uploads/HJi2R6hqh.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h3 id="限制或禁止使用者使用特定應用程式" data-svelte-h="svelte-epwre2"><a href="#限制或禁止使用者使用特定應用程式">限制或禁止使用者使用特定應用程式</a></h3> <p>GPO -&gt; User Configuration -&gt; Administrative Templetes -&gt; System -&gt; 設定 Don’t run specified Windows applications<img src="https://hackmd.io/_uploads/Sy5jSED03.png" alt="https://hackmd.io/_uploads/Sy5jSED03.png" class="rounded-lg my-2" loading="lazy" decoding="async">設定為 <strong data-svelte-h="svelte-tra0oh">Enabled</strong>，並點選 List of disallowed applications，在 Value 欄位設定要禁用的應用程式<img src="https://hackmd.io/_uploads/HkgS8Vw02.png" alt="https://hackmd.io/_uploads/HkgS8Vw02.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h3 id="設定在-logon-ui-看不到上個登入的使用者" data-svelte-h="svelte-lnk77j"><a href="#設定在-logon-ui-看不到上個登入的使用者">設定在 Logon UI 看不到上個登入的使用者</a></h3> <p>GPO -&gt; Computer Configuration -&gt; Policies -&gt; Administrative Templetes -&gt; System -&gt; Logon -&gt; 設定 Block user from showing account details on sign-in 為 <strong data-svelte-h="svelte-tra0oh">Enabled</strong> <img src="https://hackmd.io/_uploads/rkMTCT2q2.png" alt="https://hackmd.io/_uploads/rkMTCT2q2.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h3 id="讓-windows-server-也能掛載-debian-smbd" data-svelte-h="svelte-k62u4a"><a href="#讓-windows-server-也能掛載-debian-smbd">讓 Windows Server 也能掛載 Debian SMBD</a></h3> <p>Local GPO -&gt; Computer Configuration -&gt; Administrative Templates -&gt; Network -&gt; Lanman Workstation -&gt; 設定 Enable insecure guest logons 為 <strong data-svelte-h="svelte-tra0oh">Enabled</strong> <img src="https://hackmd.io/_uploads/rynWy0n92.png" alt="https://hackmd.io/_uploads/rynWy0n92.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h3 id="gpo-個別使用者套用規則" data-svelte-h="svelte-19caf4p"><a href="#gpo-個別使用者套用規則">GPO 個別使用者套用規則</a></h3> <p>若要指定特別使用者套用 Group Policy (刪除 Authentication Users)，至少要保留一台 Computer (最好是 Server 和 Client 都保留)<img src="https://hackmd.io/_uploads/SJMjm3FRT.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h3 id="禁止使用-windows-update" data-svelte-h="svelte-1bqfzki"><a href="#禁止使用-windows-update">禁止使用 Windows Update</a></h3> <p>GPO -&gt; Computer Configuration -&gt; Administrative Templates -&gt; Windows Components -&gt; Windows Update -&gt; 設定 Remove access to use all Windows Update features 為 <strong data-svelte-h="svelte-tra0oh">Enabled</strong> <img src="https://hackmd.io/_uploads/BJ7flZjC6.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">效果：<img src="https://hackmd.io/_uploads/SJl3gGbsR6.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h2 id="dns" data-svelte-h="svelte-1ygr0y3"><a href="#dns">DNS</a></h2> <h4 id="通知-notify" data-svelte-h="svelte-zysikv"><a href="#通知-notify">通知 (Notify)</a></h4> <p>在 Primary DNS 上設定當記錄發生變化時通知 Secondary DNS<img src="https://hackmd.io/_uploads/SJ3xUBlAT.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">設定 Secondary DNS 可以接收 Notify<img src="https://hackmd.io/_uploads/B10Uvrg0p.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h4 id="start-of-authority-record-soa" data-svelte-h="svelte-1pq0ti3"><a href="#start-of-authority-record-soa">Start of Authority Record (SOA)</a></h4> <p><img src="https://hackmd.io/_uploads/rkkD_HxAT.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">Refresh interval：Secondary DNS 多久向 Primary DNS 伺服器同步Retry interval：當 Secondary DNS 向 Primary DNS 同步但無法連線到 Primary DNS，多久後重試Expires after：當 Secondary DNS 無法連線到 Primary DNS 會一直重試，如果重試超過到期時間就放棄重試Minimum TTL：當其它 DNS 伺服器查詢這個網域的記錄時，資料儲存在對方伺服器快取中的時間 (若在到期前若對方伺服器又收到相同查詢就會直接回應快取中的資料)</p> <h2 id="允許-icmp-協議" data-svelte-h="svelte-jb9b1l"><a href="#允許-icmp-協議">允許 ICMP 協議</a></h2> <p>進入 Control Panel -&gt; Windows Defender Firewall -&gt; Advenced settings<img src="https://hackmd.io/_uploads/r1s-A6n5n.png" alt="https://hackmd.io/_uploads/r1s-A6n5n.png" class="rounded-lg my-2" loading="lazy" decoding="async">選 Inbound rules -&gt; New Rule<img src="https://hackmd.io/_uploads/HJnfR63qh.png" alt="https://hackmd.io/_uploads/HJnfR63qh.png" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/HyVQAa252.png" alt="https://hackmd.io/_uploads/HyVQAa252.png" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/S1hQ0ph92.png" alt="https://hackmd.io/_uploads/S1hQ0ph92.png" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/SyQE0a352.png" alt="https://hackmd.io/_uploads/SyQE0a352.png" class="rounded-lg my-2" loading="lazy" decoding="async">選擇 ICMP：<img src="https://hackmd.io/_uploads/By64063q3.png" alt="https://hackmd.io/_uploads/By64063q3.png" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/B1SBAah9n.png" alt="https://hackmd.io/_uploads/B1SBAah9n.png" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/BkvUATnch.png" alt="https://hackmd.io/_uploads/BkvUATnch.png" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/S1zwC6nqn.png" alt="https://hackmd.io/_uploads/S1zwC6nqn.png" class="rounded-lg my-2" loading="lazy" decoding="async">即完成 ICMP 設定<img src="https://hackmd.io/_uploads/SkSuCT3c2.png" alt="https://hackmd.io/_uploads/SkSuCT3c2.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h2 id="讓網域內電腦自動信任-ca-憑證" data-svelte-h="svelte-1hgj8bt"><a href="#讓網域內電腦自動信任-ca-憑證">讓網域內電腦自動信任 CA 憑證</a></h2> <h3 id="允許自動信任設定" data-svelte-h="svelte-1bn527i"><a href="#允許自動信任設定">允許自動信任設定</a></h3> <p>打開 Group Policy Management -&gt; Create a GPO in this domain, and Link it here<img src="https://hackmd.io/_uploads/HkxKAa2cn.png" alt="https://hackmd.io/_uploads/HkxKAa2cn.png" class="rounded-lg my-2" loading="lazy" decoding="async">選擇 Computer Configuration -&gt; Policies -&gt; Windows Settings -&gt; Security Settings -&gt; Public Keys -&gt; Certificate Services Client - Auto-Enrollmemt設定 Configuration Model 為 <strong data-svelte-h="svelte-tra0oh">Enabled</strong> <img src="https://hackmd.io/_uploads/SJcKApn93.png" alt="https://hackmd.io/_uploads/SJcKApn93.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h3 id="設定自動信任的電腦" data-svelte-h="svelte-12ij8jf"><a href="#設定自動信任的電腦">設定自動信任的電腦</a></h3> <p>選擇 Automatic Certification Settings右鍵 -&gt; New -&gt; Automatic Certificate Request<img src="https://hackmd.io/_uploads/BylcRah93.png" alt="https://hackmd.io/_uploads/BylcRah93.png" class="rounded-lg my-2" loading="lazy" decoding="async">選擇 Computer<img src="https://hackmd.io/_uploads/BJ550p35h.png" alt="https://hackmd.io/_uploads/BJ550p35h.png" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/H1LoC625n.png" alt="https://hackmd.io/_uploads/H1LoC625n.png" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/r1b2R6hq3.png" alt="https://hackmd.io/_uploads/r1b2R6hq3.png" class="rounded-lg my-2" loading="lazy" decoding="async">輸入 <code data-svelte-h="svelte-1fy3f7c">gpupdate /force</code> 後，即完成設定<img src="https://hackmd.io/_uploads/Hkh16KO2h.png" alt="https://hackmd.io/_uploads/Hkh16KO2h.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h2 id="共享資料夾安全設定-file-server-resource-manager" data-svelte-h="svelte-zkmn7l"><a href="#共享資料夾安全設定-file-server-resource-manager">共享資料夾安全設定 (File Server Resource Manager)</a></h2> <p>安裝 File Server Resource Manager<img src="https://hackmd.io/_uploads/HJn7SZjnp.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h3 id="限制共享資料夾空間" data-svelte-h="svelte-ch0v1b"><a href="#限制共享資料夾空間">限制共享資料夾空間</a></h3> <p>選擇 Quota Management -&gt; Quotas<img src="https://hackmd.io/_uploads/BkJdH-snp.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">右鍵 Create Quota<img src="https://hackmd.io/_uploads/ByeZkR2c2.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">選好要套用的共享資料夾，如果在系統給的選項內沒有題目的條件就用 Custom Properties<img src="https://hackmd.io/_uploads/HkiIUbihp.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h3 id="限制共享資料夾存放檔案類型" data-svelte-h="svelte-5xvxel"><a href="#限制共享資料夾存放檔案類型">限制共享資料夾存放檔案類型</a></h3> <p><strong data-svelte-h="svelte-p7pb6r">Step 1. 建立檔案類型群組</strong>選擇 File Screening Management -&gt; File Groups<img src="https://hackmd.io/_uploads/B1sspZo3a.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">右鍵 Create File Group<img src="https://hackmd.io/_uploads/HJUj0Wsn6.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">將此群組包含的檔案類型都加到 Files to include 內 (註：＊.exe 代表封鎖全部附檔名為 exe 的檔案)<img src="https://hackmd.io/_uploads/H1KZRZohT.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <p><strong data-svelte-h="svelte-1ikqcpl">Step 2. 建立禁止檔案類型範本</strong>選擇 File Screening Management -&gt; File Screen Templates<img src="https://hackmd.io/_uploads/S1K2hWona.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">右鍵 Create File Screen Template<img src="https://hackmd.io/_uploads/B1Eiyfona.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"> <strong data-svelte-h="svelte-36j3yp">若顯示錯誤，將虛擬機重開就可解決</strong> <img src="https://hackmd.io/_uploads/ByN_pbs3T.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <p><strong data-svelte-h="svelte-18l87u8">Step 3. 套用範本到共享資料夾</strong>選擇 File Screening Management -&gt; File Screens<img src="https://hackmd.io/_uploads/rk0p_-j2a.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">右鍵 Create File Screen<img src="https://hackmd.io/_uploads/SklXxzj36.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">選好要套用的共享資料夾，並將選項選到剛剛設定的範本<img src="https://hackmd.io/_uploads/SJGceMoha.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h2 id="更改-remote-desktop-的-tcp-port-登錄檔修改" data-svelte-h="svelte-fuiknc"><a href="#更改-remote-desktop-的-tcp-port-登錄檔修改">更改 Remote Desktop 的 TCP Port (登錄檔修改)</a></h2> <p>按一下 Windows Key + R，輸入 regedit 後 Enter在「<strong data-svelte-h="svelte-1f1gqr1">HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp</strong>」下，找到「<strong data-svelte-h="svelte-ldgmsq">PortNumber</strong>」選項並編輯其機碼值為欲設定的 Port 後重啟即可<img src="https://hackmd.io/_uploads/HJckBqzF3.png" alt="https://hackmd.io/_uploads/HJckBqzF3.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h2 id="vpn-設定" data-svelte-h="svelte-1i017zr"><a href="#vpn-設定">VPN 設定</a></h2> <p>新增 VPN 規則，選擇 DirectAccess and VPN (RAS)<img src="https://hackmd.io/_uploads/BkaBU3Ps3.png" alt="https://hackmd.io/_uploads/BkaBU3Ps3.png" class="rounded-lg my-2" loading="lazy" decoding="async">重啟後點選 Remote Access Management Console 後再選 RRAS Management console<img src="https://hackmd.io/_uploads/Sk6283Doh.png" alt="https://hackmd.io/_uploads/Sk6283Doh.png" class="rounded-lg my-2" loading="lazy" decoding="async">選擇伺服器，右鍵選擇 Configure and Enable Routing and Remote Access<img src="https://hackmd.io/_uploads/r1CKRvn32.png" alt="https://hackmd.io/_uploads/r1CKRvn32.png" class="rounded-lg my-2" loading="lazy" decoding="async">選擇 Custom configuration<img src="https://hackmd.io/_uploads/Hk4b1u32n.png" alt="https://hackmd.io/_uploads/Hk4b1u32n.png" class="rounded-lg my-2" loading="lazy" decoding="async">選擇 VPN Access 即可<img src="https://hackmd.io/_uploads/HJKFkO333.png" alt="https://hackmd.io/_uploads/HJKFkO333.png" class="rounded-lg my-2" loading="lazy" decoding="async">若無設定 DHCP：設定 VPN 的 Static address pool，並輸入範圍可使用 VPN 的 IP 範圍<img src="https://hackmd.io/_uploads/rymwDnwih.png" alt="https://hackmd.io/_uploads/rymwDnwih.png" class="rounded-lg my-2" loading="lazy" decoding="async">(若有設定 DHCP 可直接略過到下一步驟)回到 Server Manager，選 Tools -&gt; Active Directory Users and Computers<img src="https://hackmd.io/_uploads/SkhOg5_32.png" alt="https://hackmd.io/_uploads/SkhOg5_32.png" class="rounded-lg my-2" loading="lazy" decoding="async">選取想要遠端存取的使用者，並右鍵選擇「Add to a group…」<img src="https://hackmd.io/_uploads/HJJcG9dnh.png" alt="https://hackmd.io/_uploads/HJJcG9dnh.png" class="rounded-lg my-2" loading="lazy" decoding="async">輸入 Remote 後選擇 Check Names<img src="https://hackmd.io/_uploads/HJEpX5uhn.png" alt="https://hackmd.io/_uploads/HJEpX5uhn.png" class="rounded-lg my-2" loading="lazy" decoding="async">選擇 Remote Desktop Users 後，按 OK<img src="https://hackmd.io/_uploads/Hki8Ncu2h.png" alt="https://hackmd.io/_uploads/Hki8Ncu2h.png" class="rounded-lg my-2" loading="lazy" decoding="async">選擇 Network Policy Server<img src="https://hackmd.io/_uploads/BJDHD_323.png" alt="https://hackmd.io/_uploads/BJDHD_323.png" class="rounded-lg my-2" loading="lazy" decoding="async">點開 Policies -&gt; Network Policies -&gt; New<img src="https://hackmd.io/_uploads/rJ3fu_nh2.png" alt="https://hackmd.io/_uploads/rJ3fu_nh2.png" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/rJlxvs2nh.png" alt="https://hackmd.io/_uploads/rJlxvs2nh.png" class="rounded-lg my-2" loading="lazy" decoding="async">設定後在 Client 端上可輸入在群組內使用者的帳號和密碼登入 VPN若遇到登入失敗的問題或一直卡在連線中：一樣到 Network Policy Server<img src="https://hackmd.io/_uploads/H1oKHvx1a.png" alt="https://hackmd.io/_uploads/H1oKHvx1a.png" class="rounded-lg my-2" loading="lazy" decoding="async">選擇剛剛建立的規則，按右鍵 -&gt; Properties<img src="https://hackmd.io/_uploads/HJodMwxJa.png" alt="https://hackmd.io/_uploads/HJodMwxJa.png" class="rounded-lg my-2" loading="lazy" decoding="async">Constraints -&gt; Authentication Methods -&gt; Add… -&gt; 選 Microsoft: Secured password (EAP-MSCHAP v2) -&gt; OK<img src="https://hackmd.io/_uploads/SJxzrwx16.png" alt="https://hackmd.io/_uploads/SJxzrwx16.png" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/SJ-HIvlyT.png" alt="https://hackmd.io/_uploads/SJ-HIvlyT.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h3 id="vpn-安全強化-sstp-設定" data-svelte-h="svelte-1xtvju2"><a href="#vpn-安全強化-sstp-設定">VPN 安全強化 (SSTP) 設定</a></h3> <h4 id="有-web-server--https" data-svelte-h="svelte-1tqhik2"><a href="#有-web-server--https">有 Web Server + HTTPS</a></h4> <p>如果有 Web Server，SSTP 所使用的憑證需要和 Web Server 一樣故要簽一張萬用域名(*)的憑證 (若 Web Server 和 SSTP 的 FQDN 不一樣的話)<img src="https://hackmd.io/_uploads/r1wZT0kD0.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">簽好後到 Server Manager -&gt; Tools -&gt; Routing and Remote Access<img src="https://hackmd.io/_uploads/HyV4fJew0.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">Server -&gt; 右鍵 -&gt; Properties<img src="https://hackmd.io/_uploads/HyQXZyxDA.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/B1f0jJlwR.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <!-- HTML_TAG_START --><pre class="shiki material-default"><div class='code-container'><code><div class='line'>先設定 CA Server 的 Certificate Templates</div><div class='line'>MMC -&gt; Certificate Templates -&gt; IPSec -&gt; 右鍵 Duplicate Template</div><div class='line'>![image](https://hackmd.io/_uploads/SJ0plU-S0.png)</div><div class='line'>Request Handling -&gt; 勾選 Allow private key to be exported</div><div class='line'>![image](https://hackmd.io/_uploads/HJWMZ8bHR.png)</div><div class='line'>Subject Name -&gt; 選擇 Supply in the request</div><div class='line'>![image](https://hackmd.io/_uploads/Sy93-8-B0.png)</div><div class='line'>Extensions Application -&gt; Edit...</div><div class='line'>![image](https://hackmd.io/_uploads/rk9eGUbHR.png)</div><div class='line'>Add... -&gt; Server Authentication</div><div class='line'>![image](https://hackmd.io/_uploads/r1xVfL-rC.png)![image](https://hackmd.io/_uploads/SyD8GUWSA.png)</div><div class='line'>Certificate Templates 設定完成</div></code></div></pre><!-- HTML_TAG_END --> <h3 id="radius-驗證伺服器" data-svelte-h="svelte-u4b2z"><a href="#radius-驗證伺服器">RADIUS 驗證伺服器</a></h3> <p>若題目有要求用 AD 使用者帳號驗證，但 VPN 不是安裝在 Domain Contoller 上的時候就會需要 RADIUS在 Domain Controller 上先安裝 Network Policy and Access Services<img src="https://hackmd.io/_uploads/HyZMWglPC.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">安裝後 -&gt; 點選 Tools -&gt; Network Policy Server -&gt; NPS (Local)確認選項是 VPN Connections 後，點選 Configure VPN or Dial-Up<img src="https://hackmd.io/_uploads/HyF2QegvC.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">選擇 Virtual Private Network (VPN) Connections<img src="https://hackmd.io/_uploads/BkC-4xlDR.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">Next -&gt; Add…<img src="https://hackmd.io/_uploads/BkzfBgxw0.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">將被驗證方的資料輸入完後按 Verify…<img src="https://hackmd.io/_uploads/HyAozexDR.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">再按 Resolve，系統會確定 Client 端是否在線，若在線下面的 IP address 會顯示<img src="https://hackmd.io/_uploads/ByKLSlew0.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">將三個選項都確認無誤後再下一步<img src="https://hackmd.io/_uploads/BJYGUeewC.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">接著設定可以使用 VPN 的群組<img src="https://hackmd.io/_uploads/SyIsLgeDR.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">IP Fliter 可依需求設定，若無需設定直接 Next<img src="https://hackmd.io/_uploads/SygknxeDA.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">僅勾選 Strongest encryption<img src="https://hackmd.io/_uploads/HJCGhelDR.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">Realm Name 可直接跳過<img src="https://hackmd.io/_uploads/rywFnlgv0.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">RADIUS Server 端設定完成，轉到 Client 端Server Manager -&gt; Tools -&gt; Routing and Remote Access -&gt; 右鍵 Server -&gt; Properties -&gt; Security將 Authentication provider 和 Accounting provider 都設為 RADIUS Accounting -&gt; Configure…<img src="https://hackmd.io/_uploads/SkbAvQevC.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">按 New…<img src="https://hackmd.io/_uploads/HkweuXeDA.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">Server name 輸入 Server 端的 IP Address，Shared secret 輸入在 Server 端設定好的密碼，Accounting provider 的 Configure 也照樣設定<img src="https://hackmd.io/_uploads/BJqCdXewR.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">按 OK 後就設定完成<img src="https://hackmd.io/_uploads/S10qtQlwA.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h2 id="讓外部電腦信任根憑證-root-ca" data-svelte-h="svelte-mskw9o"><a href="#讓外部電腦信任根憑證-root-ca">讓外部電腦信任根憑證 (Root CA)</a></h2> <p>在 Windows Server 端的操作：打開 MMC -&gt; 導入 Certificates -&gt; Computer Account -&gt; Local Computer<img src="https://hackmd.io/_uploads/SyfBYQ8Rh.png" alt="https://hackmd.io/_uploads/SyfBYQ8Rh.png" class="rounded-lg my-2" loading="lazy" decoding="async">Trusted Root Certificates Authorities -&gt; Certificates -&gt; 選擇要讓外部電腦驗證的根憑證 -&gt; 右鍵 All Tasks -&gt; Export…<img src="https://hackmd.io/_uploads/rkuU5QUC2.png" alt="https://hackmd.io/_uploads/rkuU5QUC2.png" class="rounded-lg my-2" loading="lazy" decoding="async">檔案格式選 DER 或 Base-64 則一即可<img src="https://hackmd.io/_uploads/H1wKc78R2.png" alt="https://hackmd.io/_uploads/H1wKc78R2.png" class="rounded-lg my-2" loading="lazy" decoding="async">在外部電腦端的操作：打開 MMC -&gt; 導入 Ceritficates -&gt; Computer Account -&gt; Local Computer -&gt; Trusted Root Certificates Authorities -&gt; Ceritficates -&gt; 右鍵 All Tasks -&gt; Import…<img src="https://hackmd.io/_uploads/H1Ppi7LR2.png" alt="https://hackmd.io/_uploads/H1Ppi7LR2.png" class="rounded-lg my-2" loading="lazy" decoding="async">選取剛剛自己導出的根憑證<img src="https://hackmd.io/_uploads/SkJYhXIC3.png" alt="https://hackmd.io/_uploads/SkJYhXIC3.png" class="rounded-lg my-2" loading="lazy" decoding="async">選擇 Place all ceritificates in the following store，並確認憑證倉庫為「Trusted Root Certificates Authorities」<img src="https://hackmd.io/_uploads/B1Bq2XLRh.png" alt="https://hackmd.io/_uploads/B1Bq2XLRh.png" class="rounded-lg my-2" loading="lazy" decoding="async">最後按下 Finish，即安裝完成根憑證，瀏覽內部網站時不會再跳出憑證錯誤等訊息<img src="https://hackmd.io/_uploads/Skbb6Q8C2.png" alt="https://hackmd.io/_uploads/Skbb6Q8C2.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h2 id="對單個使用者或群組做密碼限制-ad-ac" data-svelte-h="svelte-1s5aqjk"><a href="#對單個使用者或群組做密碼限制-ad-ac">對單個使用者或群組做密碼限制 (AD AC)</a></h2> <p>打開 AD AC，到 domain (local) -&gt; System -&gt; Password Settings Container -&gt; 右鍵 Password Settings<img src="https://hackmd.io/_uploads/BJLgKWKCp.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <!-- HTML_TAG_START --><pre class="shiki material-default"><div class='code-container'><code><div class='line'>創立一個至少需要輸入 8 個字的密碼規則</div></code></div></pre><!-- HTML_TAG_END --> <p><img src="https://hackmd.io/_uploads/H1YC5bFCp.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">回到 Users -&gt; 選擇自己要套用設定的使用者或群組 -&gt; 右鍵 Properties -&gt; Password Settings -&gt; Assign…<img src="https://hackmd.io/_uploads/Hy1D2-YAp.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">選 Advenced…<img src="https://hackmd.io/_uploads/BkfepWtAa.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">選 Find Now -&gt; 選擇自己建立的規則<img src="https://hackmd.io/_uploads/B1ZXTZKCp.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">若新輸入的密碼不到 8 個字：<img src="https://hackmd.io/_uploads/SJFSAZtC6.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/rkKDRWtAT.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">若有至少 8 個字：<img src="https://hackmd.io/_uploads/HkeiRbt0p.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/B1kp0-YRa.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h2 id="遠端桌面服務-remote-desktop-service" data-svelte-h="svelte-1oy4yin"><a href="#遠端桌面服務-remote-desktop-service">遠端桌面服務 (Remote Desktop Service)</a></h2> <p>安裝服務：<img src="https://hackmd.io/_uploads/HJLDgliR6.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/ry_igeiCT.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/ryc6xgjC6.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">使用 Internet Explorer 可瀏覽其 RDWeb (在沒有 SSL 簽證的狀況下)：<img src="https://hackmd.io/_uploads/SkJB4giRp.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/HktnHxsCp.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">也可透過網域使用者直接遠端 Server：<img src="https://hackmd.io/_uploads/BJqYNxo0T.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/SJah4gjRp.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">若簽證了可使用 Edge 正常預覽：<img src="https://hackmd.io/_uploads/HkzMwxsR6.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h2 id="啟用-ip-forwarding-regedit" data-svelte-h="svelte-1y6z8ga"><a href="#啟用-ip-forwarding-regedit">啟用 IP Forwarding (Regedit)</a></h2> <p data-svelte-h="svelte-rfg8xo">按一下 Windows Key + R，輸入 regedit 後 Enter設定「<strong>Computer\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\IPEnableRouter</strong>」為 1</p> <h2 id="次級憑證的簽證及安裝-sub-ca" data-svelte-h="svelte-wp48zq"><a href="#次級憑證的簽證及安裝-sub-ca">次級憑證的簽證及安裝 (Sub CA)</a></h2> <p>先到已安裝 Main CA 的 Server，打開 Certification Authority -&gt; 點選 Server 後右鍵 Properties<img src="https://hackmd.io/_uploads/Sk4pHiuX0.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">點選 Extensions -&gt; Select extension 選擇 CDP -&gt; 點選 http 開頭的項目 -&gt; 勾選第三跟第四個選項<img src="https://hackmd.io/_uploads/SJFFvsdXR.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">Select extension 換選擇 AIA -&gt; 點選 http 開頭的項目 -&gt; 勾選第一個選項 -&gt; 點擊 Apply<img src="https://hackmd.io/_uploads/ByfCDiOQA.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <p>接著轉到需要安裝 Sub CA 的 Server，打開 Certification Authority -&gt; 點選 Server 後右鍵 All Tasks -&gt; Renew CA Certificate…<img src="https://hackmd.io/_uploads/rJWrKiumR.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">確認 Computer Name 跟 Parent CA 都正確後，點擊 OK<img src="https://hackmd.io/_uploads/rylCtidQR.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <p>回到 Main CA Server -&gt; Pending Requests -&gt; Issue 從 Sub CA 發起的請求<img src="https://hackmd.io/_uploads/SyRN5i_mR.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">Issued Certidicates -&gt; 選擇剛剛 Issue 的 CA -&gt; Details -&gt; Copy to File…<img src="https://hackmd.io/_uploads/Sydp9s_QR.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">選擇 DER encoded 的 X.509 -&gt; Next -&gt; 儲存於自己指定的位置 -&gt; 複製到 Sub CA Server<img src="https://hackmd.io/_uploads/rJfVojOQC.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <p>再回到 Sub CA Server，點選 Server 後右鍵 All Tasks -&gt; Install CA Certificate…<img src="https://hackmd.io/_uploads/HyXAijdm0.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">右下角選擇 X.509 類型的 CA -&gt; 選擇剛剛簽好的 CA<img src="https://hackmd.io/_uploads/ByrOnjOXR.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">安裝好後，Sub CA Server 圖標會有綠色勾勾，代表正常運作</p> <h3 id="error-the-revocation-function-was-unable-to-check-revocation-because-the-revocation-server-was-offline" data-svelte-h="svelte-1k9tv90"><a href="#error-the-revocation-function-was-unable-to-check-revocation-because-the-revocation-server-was-offline">error: The revocation function was unable to check revocation because the revocation server was offline</a></h3> <p><img src="https://learn-attachment.microsoft.com/api/attachments/7a610d77-a91c-4fdd-b852-8997ea966c54?platform=QnA" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">此錯誤為無法從 Root CA 的 CRL 發布點下載撤銷憑證名單，可先嘗試透過在 hosts 內增加對 Root CA Server 的記錄 (可能需要執行 <code data-svelte-h="svelte-14xu26v">ipconfig /flushdns</code> 保證系統會透過 hosts 內的記錄找尋)<img src="https://hackmd.io/_uploads/By5GaH-rR.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <p data-svelte-h="svelte-vx6mvu">若錯誤還在，也可透過 PowerShell 指令直接停用 CRL 檢查及下載</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>certutil -setreg caCRLFlags +CRLF_REVCHECK_IGNORE_OFFLINE</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END -->]]>
    </content>
    <category term="Windows" scheme="https://shellkaitw.github.io/?tags=Windows" />
    <category term="OS" scheme="https://shellkaitw.github.io/?tags=OS" />
  </entry>
  <entry>
    <title type="html"><![CDATA[Debian]]></title>
    <link href="https://shellkaitw.github.io/debian" />
    <id>https://shellkaitw.github.io/debian</id>
    <published>2022-12-16T00:00:00.000Z</published>
    <updated>2024-09-22T00:00:00.000Z</updated>
    <summary type="html"><![CDATA[Hardening write up]]></summary>
    <content type="html">
      <![CDATA[<h3 id="samba-存取驗證-smbpasswd" data-svelte-h="svelte-17va5j1"><a href="#samba-存取驗證-smbpasswd">Samba 存取驗證 (smbpasswd)</a></h3> <p>限制在 <code data-svelte-h="svelte-1redfxp">smbuser</code> 群組的使用者才可存取資料夾設定方式：<img src="https://hackmd.io/_uploads/B14jpF30a.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">設定後還要將使用者加入 <code data-svelte-h="svelte-1qcgx2a">smbpasswd</code> 內</p> <p data-svelte-h="svelte-1dp44ke">一次新增 9 個使用者 (user01~user09) 到 smbpasswd 且密碼為 Skills39：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" sudo="="><div class='code-container'><code>for ((i=1;i&lt;=9;i++))&gt; do&gt; (echo "Skills39"; echo "Skills39") | smbpasswd -s -a user0$i&gt; done</code></div></pre><!-- Note from shiki-twoslash: the language sudo== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <h2 id="chmod-權限修改" data-svelte-h="svelte-gmmpn1"><a href="#chmod-權限修改">chmod (權限修改)</a></h2> <h3 id="數字代表的權限" data-svelte-h="svelte-1x5l8mo"><a href="#數字代表的權限">數字代表的權限</a></h3> <p data-svelte-h="svelte-17cdq0n">7 = 讀、寫和執行權限5 = 讀和執行權限4 = 唯讀權限第一位數字：文件所有者第二位數字：群組使用者 (與文件所有者在同一使用者群組)第三位數字：其他使用者</p> <h3 id="資料夾權限更改" data-svelte-h="svelte-g67lyv"><a href="#資料夾權限更改">資料夾權限更改</a></h3> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>chmod 777 [dirlocation] //將資料夾權限設為所有人都可以修改</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <h3 id="資料夾及內部檔案權限更改" data-svelte-h="svelte-1o1g43w"><a href="#資料夾及內部檔案權限更改">資料夾及內部檔案權限更改</a></h3> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>chmod -R 777 [dirlocation] //將資料夾及內部檔案權限設為所有人都可以修改</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <h2 id="關閉最後登入訊息顯示" data-svelte-h="svelte-bx05hp"><a href="#關閉最後登入訊息顯示">關閉最後登入訊息顯示</a></h2> <p data-svelte-h="svelte-1rjf8os">輸入 <code>touch ~/.hushlogin</code>，登出後即生效</p> <h2 id="ufw-firewall-useless" data-svelte-h="svelte-14ph00u"><a href="#ufw-firewall-useless">ufw (Firewall) (useless)</a></h2> <p>輸入 <code data-svelte-h="svelte-1qfydfu">apt install ufw</code> 安裝 ufw檢查 ufw 是否運作正常：<code data-svelte-h="svelte-1trx1af">service ufw status</code>ufw：<img src="https://hackmd.io/_uploads/HkSYT6hc3.png" alt="https://hackmd.io/_uploads/HkSYT6hc3.png" class="rounded-lg my-2" loading="lazy" decoding="async">可使用 <code data-svelte-h="svelte-1hrohei">ufw status</code> 查看目前允許或拒絕存取的 Port<img src="https://hackmd.io/_uploads/By3Ypphqh.png" alt="https://hackmd.io/_uploads/By3Ypphqh.png" class="rounded-lg my-2" loading="lazy" decoding="async">輸入 <code data-svelte-h="svelte-1k0chy3">ufw allow/deny [port] from/to [link]</code> 可增加要允許或拒絕規則</p> <h2 id="iptables" data-svelte-h="svelte-1b0gsvg"><a href="#iptables">iptables</a></h2> <p data-svelte-h="svelte-q3ktjn">查看目前規則：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" sudo="="><div class='code-container'><code>iptables -Loriptables -L --line-numbers (可查看帶有編號的規則，可用於刪除規則)</code></div></pre><!-- Note from shiki-twoslash: the language sudo== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p><img src="https://hackmd.io/_uploads/BkEq6p35h.png" alt="https://hackmd.io/_uploads/BkEq6p35h.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h3 id="基本設定" data-svelte-h="svelte-tyxhgj"><a href="#基本設定">基本設定</a></h3> <p data-svelte-h="svelte-1yqumv3">清除規則：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" sudo="="><div class='code-container'><code>iptables -F //清除所有的已訂定的規則iptables -X //殺掉所有使用者建立的 tablesiptables -Z //將所有的 chain 的計數與流量統計都歸零</code></div></pre><!-- Note from shiki-twoslash: the language sudo== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p><img src="https://hackmd.io/_uploads/H1Acaah5n.png" alt="https://hackmd.io/_uploads/H1Acaah5n.png" class="rounded-lg my-2" loading="lazy" decoding="async">設定預設 Chain Policy 為 DROP：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" sudo="="><div class='code-container'><code>iptables -P INPUT DROPiptables -P OUTPUT DROPiptables -P FORWARD DROP</code></div></pre><!-- Note from shiki-twoslash: the language sudo== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p><img src="https://hackmd.io/_uploads/HJlcEy9h6.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h3 id="port-連線管理" data-svelte-h="svelte-5qmkr9"><a href="#port-連線管理">Port 連線管理</a></h3> <!-- HTML_TAG_START --><pre class="shiki material-default" sudo="="><div class='code-container'><code>//允許 Port 80 連線iptables -A INPUT -p tcp --dport 80 -j ACCEPT//拒絕 Port 30 連線iptables -A INPUT -p tcp --dport 30 -j REJECT</code></div></pre><!-- Note from shiki-twoslash: the language sudo== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <h3 id="nat-轉址服務" data-svelte-h="svelte-99c45w"><a href="#nat-轉址服務">NAT 轉址服務</a></h3> <h4 id="snat-原位址轉換-內傳外" data-svelte-h="svelte-12mi6dw"><a href="#snat-原位址轉換-內傳外">SNAT (原位址轉換) (內傳外)</a></h4> <p data-svelte-h="svelte-ficulg"><strong>若要做 NAT 設定，設定指令最前面要先打 iptables -t nat</strong>使用 iptables 來完成此項目。</p> <p data-svelte-h="svelte-193e93w">NAT 設定：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" sudo="="><div class='code-container'><code>// 外網位置為 39.53.6.1/24，網卡為 eth1iptables -t nat -A POSTROUTING -o eth1 -j SNAT --to 39.53.6.1</code></div></pre><!-- Note from shiki-twoslash: the language sudo== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p data-svelte-h="svelte-1xt52ia">NAT 設定 (若外網 IP 非固定 IP)：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" sudo="="><div class='code-container'><code>// 外網網卡為 eth1iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE</code></div></pre><!-- Note from shiki-twoslash: the language sudo== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <h4 id="dnat-目的位址轉換-外傳內" data-svelte-h="svelte-f3mbbg"><a href="#dnat-目的位址轉換-外傳內">DNAT (目的位址轉換) (外傳內)</a></h4> <!-- HTML_TAG_START --><pre class="shiki material-default" sudo="="><div class='code-container'><code>// 內網位置為 192.168.39.2/24，網卡為 eth0 (設定完後本機的位置都會一律被定向到內網的192.168.39.2，建議搭配 Port 使用)iptables –t nat –A PREROUTING –i eth0 –j DNAT --to 192.168.39.2</code></div></pre><!-- Note from shiki-twoslash: the language sudo== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <h3 id="port-forwarding" data-svelte-h="svelte-ssesp0"><a href="#port-forwarding">Port Forwarding</a></h3> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>// 將 localhost 上的 Web Server 的 80 Port 做 Port Fowarding 至 8000 Portiptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8000iptables -t nat -A OUTPUT -p tcp -d localhost --dport 80 -j REDIRECT --to-ports 8000// 將在 eth0 收到的 80 Port 封包全部做 Port Forwarding 至 8080 Portiptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <h3 id="啟用-ipv4-封包轉發" data-svelte-h="svelte-f9frhn"><a href="#啟用-ipv4-封包轉發">啟用 IPv4 封包轉發</a></h3> <p>若有做 NAT 或 Port Forwarding 都需要啟用封包轉發輸入 <code data-svelte-h="svelte-1r22xip">sysctl -w net.ipv4.ip_forward=1</code> 來允許系統做 Port Forwarding (重啟後會消失)若想永久保存可編輯 <code data-svelte-h="svelte-157ke2k">/etc/sysctl.conf</code>將註解的 <code data-svelte-h="svelte-9mxdir">net.ipv4.ip_forward=1</code> 取消註解，重啟或輸入<code data-svelte-h="svelte-t9g8dz">sysctl -p</code>來生效<img src="https://hackmd.io/_uploads/ByoUA-P6a.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">現在既可以直接使用 8000 Port 訪問，也可以使用 80 Port 自動轉至 8000 Port 來訪問<img src="https://hackmd.io/_uploads/H1ubS3Iea.png" alt="https://hackmd.io/_uploads/H1ubS3Iea.png" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/BkFT43Lga.png" alt="https://hackmd.io/_uploads/BkFT43Lga.png" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/B1zsE38e6.png" alt="https://hackmd.io/_uploads/B1zsE38e6.png" class="rounded-lg my-2" loading="lazy" decoding="async"> <strong data-svelte-h="svelte-oidmfn"># 此方式較麻煩故淘汰，可見下面方法保存</strong> <del data-svelte-h="svelte-1rnr5ft">若想在重啟後一樣保留 Port Forwarding 的設定，可以至 <code>/etc/network/interface</code> 的網卡設定檔，在最下方加入post-up [iptables command]在網卡啟動後就會自動執行</del></p> <h3 id="icmp-封包管理-ip-a-連線到-ip-b-限制" data-svelte-h="svelte-4mcb3l"><a href="#icmp-封包管理-ip-a-連線到-ip-b-限制">ICMP 封包管理 (IP A 連線到 IP B 限制)</a></h3> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>// 規定 192.168.10.58 不能傳送 ICMP 封包到 192.168.10.56iptables -A INPUT -s 192.168.10.58 -d 192.168.10.56 -p icmp -j DROP/REJECT// 取消規則iptables -D INPUT (規則編號)</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p>可以使用 Ping 指令來測試規則是否正常運行：規則未啟用：(可正常 Ping 通)<img src="https://hackmd.io/_uploads/H1L6XjMz6.png" alt="https://hackmd.io/_uploads/H1L6XjMz6.png" class="rounded-lg my-2" loading="lazy" decoding="async">規則已啟用：(使用 DROP：顯示逾時)<img src="https://hackmd.io/_uploads/SkSlNozMT.png" alt="https://hackmd.io/_uploads/SkSlNozMT.png" class="rounded-lg my-2" loading="lazy" decoding="async">(使用 REJECT：顯示封包無法抵達目標主機)<img src="https://hackmd.io/_uploads/rybisP8Ga.png" alt="https://hackmd.io/_uploads/rybisP8Ga.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h3 id="保存當前設定-全部規則皆適用" data-svelte-h="svelte-15lpa99"><a href="#保存當前設定-全部規則皆適用">保存當前設定 (全部規則皆適用)</a></h3> <!-- HTML_TAG_START --><pre class="shiki material-default" sudo="="><div class='code-container'><code>apt install iptables-persistent</code></div></pre><!-- Note from shiki-twoslash: the language sudo== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p data-svelte-h="svelte-sh7lhf">都點選 OK 後，重開機規則不會消失如果有做變更則重新安裝套件即可：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" sudo="="><div class='code-container'><code>apt reinstall iptables-persistent</code></div></pre><!-- Note from shiki-twoslash: the language sudo== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <h3 id="刪除某一行規則" data-svelte-h="svelte-9vle50"><a href="#刪除某一行規則">刪除某一行規則</a></h3> <p data-svelte-h="svelte-1il1msn">先查看規則號碼：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" sudo="="><div class='code-container'><code>iptables -L --line-numbers</code></div></pre><!-- Note from shiki-twoslash: the language sudo== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p data-svelte-h="svelte-1h57vd1">依照編號選擇要刪除的規則：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" sudo="="><div class='code-container'><code>iptables -D INPUT 1 # 若只有上述那行，那就是 1</code></div></pre><!-- Note from shiki-twoslash: the language sudo== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <h2 id="dns-server-bind9" data-svelte-h="svelte-oyqkff"><a href="#dns-server-bind9">DNS Server (Bind9)</a></h2> <h3 id="編輯版本號碼-有版本詢問時回傳特定文字" data-svelte-h="svelte-1svlfih"><a href="#編輯版本號碼-有版本詢問時回傳特定文字">編輯版本號碼 (有版本詢問時，回傳特定文字)</a></h3> <p>編輯檔案：<code data-svelte-h="svelte-1ym7hrd">vim /etc/bind/named.conf.options</code>更改 version 下的內容為回傳的內容<img src="https://hackmd.io/_uploads/SkogZzAca.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">查詢版本指令：<code data-svelte-h="svelte-196mv23">nslookup -debug -class=chaos -query=txt version.bind [DNS-IP]</code> <img src="https://hackmd.io/_uploads/r1V_GzA5a.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h2 id="使用者和群組常用設定指令" data-svelte-h="svelte-hok9yu"><a href="#使用者和群組常用設定指令">使用者和群組常用設定指令</a></h2> <!-- HTML_TAG_START --><pre class="shiki material-default" sudo="="><div class='code-container'><code>useradd [username] //建立使用者useradd -g [groupname] [username] //建立有初始群組的使用者useradd -G [groupname] [username] //建立一般群組的使用者useradd -m [username] //建立有家目錄的使用者 (/home)useradd -p &#96;openssl passwd -1 [password]&#96; -s /bin/bash [username] //建立帶密碼且路徑為/bin/bash的使用者userdel [username] //刪除使用者groupadd [groupname] //創立使用者群組usermod -a -G [groupname] [username] or gpasswd -a [username] [groupname] //將使用者加入群組usermod -g [groupname] [username] //更改使用者的主要用戶組usermod -s /bin/bash [username] //更改使用者預設路徑為/bin/bashgpasswd -d [username] [groupname] //將使用者移出群組mkhomedir_helper [username] //幫已存在的使用者創立家目錄 (/home)rm -r /home/[username] //刪除使用者的家目錄 (/home)</code></div></pre><!-- Note from shiki-twoslash: the language sudo== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <ul data-svelte-h="svelte-a5zyjt"><li>其實在預設狀態下不論使用 useradd 或 adduser 建立的使用者根目錄都會是家目錄，以上關於家目錄的設定指令是以防萬一使用</li></ul> <h2 id="密碼常用指令" data-svelte-h="svelte-1k7cbc5"><a href="#密碼常用指令">密碼常用指令</a></h2> <p>強制使用者首次登入時更改密碼：<code data-svelte-h="svelte-19jdch5">chage -d 0 [username]</code>限制更改密碼的最短/最大長度：(1) 編輯密碼驗證策略：<code data-svelte-h="svelte-1jt219o">vim /etc/pam.d/common-password</code>(2-1) 設定密碼最短長度為 8 個字元：在<code data-svelte-h="svelte-1phnlau">password [success=1 default=ignore] pam.unix.so obscure yescrypt</code> 後面加入 <code data-svelte-h="svelte-19ylbwm">minlen=8</code> <img src="https://hackmd.io/_uploads/Hk4Cpph5h.png" alt="https://hackmd.io/_uploads/Hk4Cpph5h.png" class="rounded-lg my-2" loading="lazy" decoding="async">(註：minlen=最短長度 maxlen=最大長度)(2-3) 取消密碼複雜性限制：在 <code data-svelte-h="svelte-1fntbme">password requsite pam_deny.so</code> 中間加入 <code data-svelte-h="svelte-gempn1">dictcheck=0</code> <img src="https://hackmd.io/_uploads/HycQD2pp6.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h2 id="在-root-使用-rmcp-及-mv-指令前先確認是否要執行" data-svelte-h="svelte-1hcxnci"><a href="#在-root-使用-rmcp-及-mv-指令前先確認是否要執行">在 root 使用 rm，cp 及 mv 指令前先確認是否要執行</a></h2> <p>編輯 root 的 bashrc 檔案：<code data-svelte-h="svelte-1ep630o">vim ~/.bashrc</code> <img src="https://hackmd.io/_uploads/S1Lu7OZt2.png" alt="https://hackmd.io/_uploads/S1Lu7OZt2.png" class="rounded-lg my-2" loading="lazy" decoding="async">將下面三行註解解除掉後存檔：<img src="https://hackmd.io/_uploads/SJnFXOWKn.png" alt="https://hackmd.io/_uploads/SJnFXOWKn.png" class="rounded-lg my-2" loading="lazy" decoding="async">最後重新載入 bashrc：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>. ~/.bashrc</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p><img src="https://hackmd.io/_uploads/ByRsejrka.png" alt="https://hackmd.io/_uploads/ByRsejrka.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h2 id="sudo-設定" data-svelte-h="svelte-1tbw5dq"><a href="#sudo-設定">sudo 設定</a></h2> <p data-svelte-h="svelte-upo26v">安裝設定 sudo 的套件：<code>apt install sudo</code>修改設定檔預設編輯器從 nano 到 vim：<code>EDITOR=vim visudo</code>編輯設定檔：<code>visudo</code></p> <h3 id="設定某些使用者或群組不需密碼即可使用-sudo" data-svelte-h="svelte-11sly8v"><a href="#設定某些使用者或群組不需密碼即可使用-sudo">設定某些使用者或群組不需密碼即可使用 sudo</a></h3> <p data-svelte-h="svelte-t73ym7">若是使用者，在使用者區域增加：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>[username]    ALL=(ALL) NOPASSWD:ALL</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p data-svelte-h="svelte-1fgub3z">若是群組，在群組區域增加：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>%[groupname]    ALL=(ALL) NOPASSWD:ALL</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p><img src="https://hackmd.io/_uploads/r1dBMh5Yn.png" alt="https://hackmd.io/_uploads/r1dBMh5Yn.png" class="rounded-lg my-2" loading="lazy" decoding="async">指令說明：<img src="https://hackmd.io/_uploads/S1UXdwi03.png" alt="https://hackmd.io/_uploads/S1UXdwi03.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h3 id="限制-sudo-使用者可使用的指令" data-svelte-h="svelte-wuu0uw"><a href="#限制-sudo-使用者可使用的指令">限制 sudo 使用者可使用的指令</a></h3> <p data-svelte-h="svelte-1w639ct">先將欲設定的使用者加入 sudo 群組：<code>usermod -aG sudo [username]</code>假設要限制 sudo 群組僅可使用 cat, mv 及 ls 三個指令，在文件的群組區域內增加：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" sudo="="><div class='code-container'><code>%sudo   ALL=(ALL:ALL) /bin/cat, /bin/mv, /bin/ls</code></div></pre><!-- Note from shiki-twoslash: the language sudo== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <p><img src="https://hackmd.io/_uploads/ByMR2PoR3.png" alt="https://hackmd.io/_uploads/ByMR2PoR3.png" class="rounded-lg my-2" loading="lazy" decoding="async">(註：大多的指令路徑都是在 /bin (/usr/bin) 或 /sbin 資料夾內)最終結果：當在 sudo 群組內的使用者使用 sudo 執行其他指令會顯示不允許執行<img src="https://hackmd.io/_uploads/HygOaAwsC2.png" alt="https://hackmd.io/_uploads/HygOaAwsC2.png" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h2 id="log-查看-以-vim-開啟" data-svelte-h="svelte-o9kz1e"><a href="#log-查看-以-vim-開啟">log 查看 (以 vim 開啟)</a></h2> <p data-svelte-h="svelte-bjnkhy">Debian 12：</p> <!-- HTML_TAG_START --><pre class="shiki material-default" bash="="><div class='code-container'><code>journalctl | vim -</code></div></pre><!-- Note from shiki-twoslash: the language bash== was not set up for Shiki to use, and so there is no code highlighting --><!-- HTML_TAG_END --> <h2 id="easy-rsa-ca-tool" data-svelte-h="svelte-l1mkp0"><a href="#easy-rsa-ca-tool">Easy-RSA (CA Tool)</a></h2> <p data-svelte-h="svelte-94c93z">Easy-RSA 是 OpenVPN 的自簽根憑證及簽證工具安裝指令：<code>apt install openvpn easy-rsa</code>Easy-RSA 的預設路徑在<code>/usr/share/easy-rsa</code>，可移動到 <code>/etc/openvpn/easy-rsa</code></p> <h3 id="自簽-root-ca" data-svelte-h="svelte-1j07von"><a href="#自簽-root-ca">自簽 Root CA</a></h3> <p data-svelte-h="svelte-195swsl">將當前工作路徑切換到 Easy-RSA 的路徑，便於作業<code>cd /etc/openvpn/easy-rsa</code>先初始化 Easy-RSA 給 Root CA 使用的 PKI<code>./easyrsa init-pki</code>編輯 Root CA 的 Profile，屆時會套用到生成的 Root CA 上<code>vim pki/vars</code>參數說明：</p> <!-- HTML_TAG_START --><pre class="shiki material-default"><div class='code-container'><code><div class='line'>set_var EASYRSA_DN：可選 org 或 cn_only，若選 cn_only 只會有 Common Name 的資料</div><div class='line'>set_var EASYRSA_REQ_COUNTRY：Country Name (國家)</div><div class='line'>set_var EASYRSA_REQ_PROVINCE：Province Name(省/州)</div><div class='line'>set_var EASYRSA_REQ_CITY：City (城市)</div><div class='line'>set_var EASYRSA_REQ_ORG：Organization (公司/組織)</div><div class='line'>set_var EASYRSA_REQ_EMAIL：Email (電子郵件)</div><div class='line'>set_var EASYRSA_REQ_OU：Organization Unit (組織單位/部門)</div><div class='line'>set_var EASYRSA_KEY_SIZE：金鑰位元數</div><div class='line'>set_var EASYRSA_REQ_DN：Common Name (一般 CA 為你要保護的網域名稱，Root CA 就當作為此憑證的名字)</div><div class='line'>set_var EASYRSA_DIGEST：使用的加密模型</div></code></div></pre><!-- HTML_TAG_END --> <p data-svelte-h="svelte-19gq906">建立 Root CA ：<code>./easyrsa build-ca nopass</code> (<code>nopass</code>：不設定密碼)</p> <h3 id="簽署旗下的-request" data-svelte-h="svelte-189xhpw"><a href="#簽署旗下的-request">簽署旗下的 Request</a></h3> <p data-svelte-h="svelte-1llqedg">先導入請求到 Easy-RSA 內暫存：<code>./easyrsa import-req [request-file-path] [register-name]</code>簽證暫存的檔案：<code>./easyrsa sign_req [ca-type] [register-name]</code> <code>ca-type</code>：若作為服務或伺服器使用，值通常為 <code>server</code> 或 <code>ca</code> <strong>若使用 ca 模式就不會將 SAN 值寫入憑證</strong></p> <h2 id="openconnect-ssl-vpn-server-ocserv" data-svelte-h="svelte-lysikq"><a href="#openconnect-ssl-vpn-server-ocserv">OpenConnect SSL VPN Server (ocserv)</a></h2> <p data-svelte-h="svelte-ohazwf">反正就是比 OpenVPN 好用的 VPN Server (吧)，Client 通常會使用 AnyConnect 連結安裝指令：<code>apt install ocserv</code>編輯設定檔：<code>vim /etc/ocserv/ocserv.conf</code>參數說明：</p> <!-- HTML_TAG_START --><pre class="shiki material-default"><div class='code-container'><code><div class='line'>listen-port：TCP 監聽的介面的 IP 位址 (預設為全介面都監聽)</div><div class='line'>udp-listen-host：UDP 監聽的介面的 IP 位址 (預設為全介面都監聽)</div><div class='line'>tcp-port：TCP 接入 VPN 的監聽 Port</div><div class='line'>udp-port：UDP 接入 VPN 的監聽 Port</div><div class='line'>socket-file：用於進程的作業檔案的路徑 (若 VPN 出問題可將值換為 /run/ocserv.socket)</div><div class='line'>run-as-user：執行 ocserv 進程的使用者 (無須更改)</div><div class='line'>run-as-group：執行 ocserv 進程的群組 (無須更改)</div><div class='line'>server-cert：用於 VPN 憑證的路徑 (用與 Web Server 一樣的請求產生方式)</div><div class='line'>server-key：用於 VPN 憑證的私鑰的路徑</div><div class='line'>dh-params：密鑰交換協議檔案路徑 (需透過指令生成)</div><div class='line'>ca-cert：簽署 VPN 憑證的 CA 根憑證</div></code></div></pre><!-- HTML_TAG_END --> <h2 id="vlan-子介面" data-svelte-h="svelte-g2g1wk"><a href="#vlan-子介面">VLAN 子介面</a></h2> <p>安裝 VLAN 套件：<code data-svelte-h="svelte-7ur38t">apt install vlan</code>啟用 VLAN 功能：<code data-svelte-h="svelte-19b7nu2">modprobe 8021q</code>編輯網卡介面設定檔：<code data-svelte-h="svelte-1tvkct9">vim /etc/network/interfaces</code> <img src="https://hackmd.io/_uploads/B1QgxDfd0.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"> <strong data-svelte-h="svelte-1s0unfe">VLAN 介面名稱可以直接在設定檔編輯，無需在 rule 裡設定</strong> <code data-svelte-h="svelte-1rm6xbr">vlan-raw-device</code>：表示這個 VLAN Interface 是從哪張網卡分出來的存檔後退出執行：<code data-svelte-h="svelte-14elun0">service networking restart</code> <img src="https://hackmd.io/_uploads/SykueDMd0.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <h2 id="strongswan-ipsec--ikev1v2" data-svelte-h="svelte-17t48sg"><a href="#strongswan-ipsec--ikev1v2">StrongSwan (IPSec &amp; IKEv1、v2)</a></h2> <p>安裝套件：<code data-svelte-h="svelte-1bc6d5u">apt install strongswan</code>編輯設定檔：<code data-svelte-h="svelte-es5g5u">vim /etc/ipsec.conf</code> <img src="https://hackmd.io/_uploads/B11oChMuA.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"> <code data-svelte-h="svelte-ubkgpk">strictcrlpolicy</code>：驗證時是否對遠端的 SSL 憑證嚴格地檢查是否包含 CRL (通常為 <code data-svelte-h="svelte-13hb7sz">no</code>)<code data-svelte-h="svelte-18vr0kj">uniqueids</code>：用於控制多次連線 (通常為 <code data-svelte-h="svelte-13hb7sz">no</code>)</p> <p data-svelte-h="svelte-xl5s3b"><code>keyexchange</code>：要採用的 IKE 版本，依據你在 Cisco Router 端的設定或另一端 Linux 設定<code>left</code>：遠端裝置<code>right</code>：本地裝置<code>ike</code>：選擇的 IKE 加密演算法套件，分 3 個部分組成，用<code>-</code>連接，第一部分加密算法：3des，aes[encryption_bit] 等，第二部分認證算法：md5，sha1，sha256 等，第三部分 DH 算法：modp[hash_bits] 等<code>esp</code>：選擇的 ESP 加密演算法套件，分 3 個部分組成，用<code>-</code>連接，第一部分加密算法：3des，aes[encryption_bit] 等，第二部分認證算法：md5，sha1，sha256 等，第三部分 DH 算法：modp[hash_bits] 等<a href="https://docs.strongswan.org/docs/5.9/config/IKEv2CipherSuites.html" rel="nofollow noopener noreferrer external" target="_blank">其他加密套件可參考官方 Document (IKEv2)</a></p> <h3 id="建立用於-ipsec-的-tunnel" data-svelte-h="svelte-1okz82n"><a href="#建立用於-ipsec-的-tunnel">建立用於 IPSec 的 Tunnel</a></h3> <p>編輯網卡介面設定檔：<code data-svelte-h="svelte-1tvkct9">vim /etc/network/interfaces</code> <img src="https://hackmd.io/_uploads/rkrrYlXuR.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p> <p data-svelte-h="svelte-13dgjvv">新增 Tunnel 指令，需在介面啟用前添加，所以使用 <code>pre-up</code>：</p> <!-- HTML_TAG_START --><pre class="shiki material-default"><div class='code-container'><code><div class='line'>pre-up ip tunnel add [tunnel_name] mode gre remote [remote_ip] local [local_ip] ttl 255</div></code></div></pre><!-- HTML_TAG_END --> <p>其他兩則刪除指令可自行評估是否需要，可能會出現錯誤<img src="https://hackmd.io/_uploads/r1aN5eQOC.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">Cisco Router 端：<img src="https://hackmd.io/_uploads/HkePilXdR.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"> <img src="https://hackmd.io/_uploads/BJwc9eQd0.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async">從中間 Router (ISP) 抓包，封包類型從 ICMP 變為 ESP，表示已經過加密：<img src="https://hackmd.io/_uploads/HyOboeXuA.png" alt="image" class="rounded-lg my-2" loading="lazy" decoding="async"></p>]]>
    </content>
    <category term="Linux" scheme="https://shellkaitw.github.io/?tags=Linux" />
    <category term="OS" scheme="https://shellkaitw.github.io/?tags=OS" />
  </entry>
  <entry>
    <title type="html"><![CDATA[About Me!]]></title>
    <link href="https://shellkaitw.github.io/about_me" />
    <id>https://shellkaitw.github.io/about_me</id>
    <published>2022-11-25T00:00:00.000Z</published>
    <updated>2024-09-22T00:00:00.000Z</updated>
    <content type="html">
      <![CDATA[<h2 id="關於我" data-svelte-h="svelte-14p3kr3"><a href="#關於我">關於我</a></h2> <div class="relative w-auto min-h-48 rounded-box overflow-hidden bg-gradient-to-b from-primary to-secondary text-primary-content transition-shadow duration-200 shadow-xl hover:shadow-2xl p-4 md:p-8 my-4"><div class="absolute -top-4 opacity-10 text-[12rem] text-neutral leading-tight rotate-[30deg]">Shellkai Huang</div> <div class="avatar mb-4"><div class="rounded-full border-2 border-white shadow-xl w-16 h-16"><img class="hover:rotate-[360deg] transition-transform duration-1000 ease-in-out m-0" src="/assets/profile.jpg" alt="Shellkai Huang" loading="lazy" decoding="async"></div></div> <div class="opacity-50">ShellkaiTW</div> <div class="text-2xl mb-2">Shellkai Huang</div> <div><!-- HTML_TAG_START -->「每一次新的嘗試，皆是在未知中探索著，且學習著。」<!-- HTML_TAG_END --></div> <div class="flex flex-col md:flex-row gap-4 mt-4" data-svelte-h="svelte-17hinao"><a href="https://bit.ly/shellkai" rel="noopener external" target="_blank" class="group flex-1 relative overflow-hidden btn btn-block normal-case border-none no-underline bg-[#5865f2] hover:bg-[#7983f5]"><span class="i-simple-icons-discord absolute w-16 h-16 right-10 opacity-20 fill-white transform-gpu transition-transform ease-in-out duration-500 group-hover:scale-125"></span> <span class="z-10 !text-white">My own server: i realized here&#39;s mod is shellkai</span></a></div></div> <p>安安，我是 Shellkai，是個已經 0.0000000000 歲的人類，就讀高職資訊科三年級，從一台 Android 手機開啟了我的資訊之旅，目前專攻於伺服器架設（Windows Server、Linux）、網管設備建置（Cisco Devices）、網路規劃及簡易的 Windows Server 及 Linux 的系統安全強化，希望未來能朝著資安的方向前進！</p> <h2 id="競賽" data-svelte-h="svelte-16obul"><a href="#競賽">競賽</a></h2> <ul class="timeline svelte-3j1e6h"><li class="timeline-item alternate svelte-1eitw8k"><div class="timeline-opposite-content alternate svelte-1c9jp58"><p>2020</p>  </div> <div class="timeline-separator svelte-1lqxdk9"><span class="timeline-dot svelte-226qa6"> </span> <span class="timeline-connector svelte-jbpjct"></span>  </div> <div class="timeline-content alternate svelte-1mnas8e"><h3>臺北市國中小學生 Scratch 貓咪盃「創意遊戲」國中組 入選</h3>  </div>  </li><li class="timeline-item alternate svelte-1eitw8k"><div class="timeline-opposite-content alternate svelte-1c9jp58"><p>2023</p>  </div> <div class="timeline-separator svelte-1lqxdk9"><span class="timeline-dot svelte-226qa6"> </span> <span class="timeline-connector svelte-jbpjct"></span>  </div> <div class="timeline-content alternate svelte-1mnas8e"><h3>第 53 屆全國技能競賽分區北區賽 39 資訊與網路技術 佳作 (rk.12)</h3>  </div>  </li><li class="timeline-item alternate svelte-1eitw8k"><div class="timeline-opposite-content alternate svelte-1c9jp58"><p>2023</p>  </div> <div class="timeline-separator svelte-1lqxdk9"><span class="timeline-dot svelte-226qa6"> </span> <span class="timeline-connector svelte-jbpjct"></span>  </div> <div class="timeline-content alternate svelte-1mnas8e"><h3>桃園國際新創機器人節 (TIRT) T1 智能賽車組 &amp; 機器人划龍舟組</h3>  </div>  </li><li class="timeline-item alternate svelte-1eitw8k"><div class="timeline-opposite-content alternate svelte-1c9jp58"><p>2023</p>  </div> <div class="timeline-separator svelte-1lqxdk9"><span class="timeline-dot svelte-226qa6"> </span> <span class="timeline-connector svelte-jbpjct"></span>  </div> <div class="timeline-content alternate svelte-1mnas8e"><h3>112 年度資安技能金盾獎</h3>  </div>  </li><li class="timeline-item alternate svelte-1eitw8k"><div class="timeline-opposite-content alternate svelte-1c9jp58"><p>2024</p>  </div> <div class="timeline-separator svelte-1lqxdk9"><span class="timeline-dot svelte-226qa6"> </span> <span class="timeline-connector svelte-jbpjct"></span>  </div> <div class="timeline-content alternate svelte-1mnas8e"><h3>第 54 屆全國技能競賽分區北區賽 39 資訊與網路技術 金牌 (rk.1)</h3>  </div>  </li><li class="timeline-item alternate svelte-1eitw8k"><div class="timeline-opposite-content alternate svelte-1c9jp58"><p>2024</p>  </div> <div class="timeline-separator svelte-1lqxdk9"><span class="timeline-dot svelte-226qa6"> </span> <span class="timeline-connector svelte-jbpjct"></span>  </div> <div class="timeline-content alternate svelte-1mnas8e"><h3>第 54 屆全國技能競賽全國賽 ⠀39 資訊與網路技術 銅牌 (rk.3)</h3>  </div>  </li> </ul>More Coming Soon...<h2 id="證照" data-svelte-h="svelte-kdx2j0"><a href="#證照">證照</a></h2> <ul class="timeline svelte-3j1e6h"><li class="timeline-item alternate svelte-1eitw8k"><div class="timeline-opposite-content alternate svelte-1c9jp58"><p>2020</p>  </div> <div class="timeline-separator svelte-1lqxdk9"><span class="timeline-dot svelte-226qa6"> </span> <span class="timeline-connector svelte-jbpjct"></span>  </div> <div class="timeline-content alternate svelte-1mnas8e"><h3>GEPT 全民英檢 初級</h3>  </div>  </li><li class="timeline-item alternate svelte-1eitw8k"><div class="timeline-opposite-content alternate svelte-1c9jp58"><p>2023</p>  </div> <div class="timeline-separator svelte-1lqxdk9"><span class="timeline-dot svelte-226qa6"> </span> <span class="timeline-connector svelte-jbpjct"></span>  </div> <div class="timeline-content alternate svelte-1mnas8e"><h3>中華民國技術士證 電腦硬體裝修 丙級</h3>  </div>  </li> </ul> <h3 id="待考取--希望考取證照" data-svelte-h="svelte-3pqexi"><a href="#待考取--希望考取證照">待考取 &amp; 希望考取證照</a></h3> <ul data-svelte-h="svelte-159ixzf"><li>中華民國技術士證 電腦硬體裝修 乙級 (預計 2024-11 考取即測即評)</li> <li>iPAS 資訊安全工程師 初級</li> <li>CCNA 思科認證網路工程師</li> <li>RHCE (Red Hat Certified Engineer)</li></ul> <h2 id="授課--其他經驗" data-svelte-h="svelte-1hnmgg1"><a href="#授課--其他經驗">授課 / 其他經驗</a></h2> <ul data-svelte-h="svelte-1klkckg"><li>2023 松山工農黑客 IT 社 工作室網路架設課程講師 &amp; 活動</li> <li>2024 松山工農資訊技術中心@選手室 設備管理員</li></ul>]]>
    </content>
  </entry>
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="https://shellkaitw.github.io/hello-world" />
    <id>https://shellkaitw.github.io/hello-world</id>
    <published>2022-11-25T00:00:00.000Z</published>
    <updated>2022-11-25T00:00:00.000Z</updated>
    <content type="html">
      <![CDATA[<p data-svelte-h="svelte-k5cwrs">Here’s the website’s test page :)</p>   <div data-testid="general-observer"></div> <br>   <div data-testid="general-observer"></div>]]>
    </content>
    <category term="Hello World" scheme="https://shellkaitw.github.io/?tags=Hello%20World" />
  </entry>
  <entry>
    <title type="html"><![CDATA[(Blog's Template Document) Elements]]></title>
    <link href="https://shellkaitw.github.io/hello-world/elements" />
    <id>https://shellkaitw.github.io/hello-world/elements</id>
    <published>2021-12-12T00:00:00.000Z</published>
    <updated>2024-10-24T08:01:28.565Z</updated>
    <content type="html">
      <![CDATA[<h2 id="headings" data-svelte-h="svelte-17ezzq3"><a href="#headings">Headings</a></h2> <h3 id="heading" data-svelte-h="svelte-1lz1oii"><a href="#heading">Heading</a></h3> <h4 id="heading-1" data-svelte-h="svelte-18swq4u"><a href="#heading-1">Heading</a></h4> <h5 id="heading-2" data-svelte-h="svelte-seo8oo"><a href="#heading-2">Heading</a></h5> <h6 id="heading-3" data-svelte-h="svelte-11zzhhm"><a href="#heading-3">Heading</a></h6> <hr> <h2 id="paragraphs" data-svelte-h="svelte-1jrm51r"><a href="#paragraphs">Paragraphs</a></h2> <p data-svelte-h="svelte-1cwujs"><span class="spoiler">spoiler</span></p> <p data-svelte-h="svelte-1smaymh"><strong><em>The</em></strong> <em>quick</em> <u>brown</u> <a href="https://www.foxnews.com/" rel="nofollow noopener noreferrer external" target="_blank">fox</a> <code>jumps</code> <del>over</del> the lazy <strong>dog</strong>.</p> <p data-svelte-h="svelte-rzm3sy">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p> <p data-svelte-h="svelte-1rcwbbl">建格的何另始養離腳合兒現各談花車是都無處與費別、信善行修覺自！壓總談下市率應次司公母兒用什一線送用標地倒直作任老數年白安足個後引使名隊懷持日落異今特族？</p> <p data-svelte-h="svelte-19ezoke">一士我像衣買了人義，計念？</p> <p data-svelte-h="svelte-k1vvek">期老外並中般灣作各現初知強車我的品式企國立市它北待不型師文人注信方，各成能久，然的孩界，他事應在創灣字母寫麼，會不作散際，學節水……全當名己會天還著行多是生如內他道了家至種樣見景時一……區行水影。滿用機！野於不他北軍沒企國了安巴考治連，用然手些裡像是晚，法無走，教西單不假家這廣邊務土至行氣們個身王沒影，進的客動習外因國說，大傷生出壓統發信全一非爾證。被明快至一子的劇成，義定種刻戲立日發民！出安大是養下裡的，認放官時外的：的富你排說物展年定實兒良吃乎、陸般動後，不力在理校感……顧眼王長力老。</p> <p data-svelte-h="svelte-5q7uy2">重多一？生光聯……動說麼了：起形市般我題臉事級。</p> <blockquote data-svelte-h="svelte-1t277r2"><p>In solitude, where we are least alone.</p></blockquote> <p data-svelte-h="svelte-dbq3jo">私は絶対いよいよ漠然たる相当心に対してはずの他にできるならな。けっして今に養成めも何だか漠然たる仕事たないだけにしからならでをは話安んずるないですて、わざわざには聴いましたなけれた。権力を気がつきなのはどうしても先刻が毫もらしくでう。</p> <p data-svelte-h="svelte-br4gki">ようやく嘉納さんに供獄とても承諾をやるでしょ習慣その主義それか攻撃にに対してお関係でたあるですと、その今は俺か釣竿頭に喜ぶば、嘉納さんののより考のそれをよくごふりと云ってあなた一団がお融和へ見えようにまあご経験にしずませば、とうとうもっとも誤解になるたでいるないのを思っですた。しかもしかしながら大首へする気もずいぶん美味と移ろたて、この言葉にもいうですてってがたにしてしまえたない。この限り時代のためその学校も私上を吹き込んんかと大森さんをしなませ、人の今日んというご講義ただですば、晩の時で長靴が始めだけの時代に前もっでいて、どうの今日が思えばそのためとあたかも足りんなとしだ事でが、ないますなて少し実職業いでし事だろたませ。</p> <p data-svelte-h="svelte-63jeqz">さて学校か不幸か話に教えですけれども、今中力が起るて得るですためがご講演の今に訊かたです。多年をはどうしても思うでいうんたずでと、まるで何とも繰り返しが周旋はさっそく悪いうので。</p> <p data-svelte-h="svelte-11pdwd8"><a href="#headings">scrollToTop</a></p> <hr> <h2 id="lists" data-svelte-h="svelte-g7u641"><a href="#lists">Lists</a></h2> <h3 id="definition-list-dl" data-svelte-h="svelte-1l26dxc"><a href="#definition-list-dl">Definition List (dl)</a></h3> <dl data-svelte-h="svelte-1593q4a"><dt>Definition List Title</dt><dd>This is a definition list division.</dd></dl> <h3 id="ordered-list-ol" data-svelte-h="svelte-1e2vcc5"><a href="#ordered-list-ol">Ordered List (ol)</a></h3> <ol data-svelte-h="svelte-1lrkorm"><li>List Item 1</li> <li>List Item 2</li> <li>List Item 3</li></ol> <h3 id="unordered-list-ul" data-svelte-h="svelte-1r3t7r6"><a href="#unordered-list-ul">Unordered List (ul)</a></h3> <ul data-svelte-h="svelte-1m0ot56"><li>List Item 1</li> <li>List Item 2</li> <li>List Item 3</li></ul> <h3 id="checkbox-list-ul" data-svelte-h="svelte-19gylr7"><a href="#checkbox-list-ul">Checkbox List (ul)</a></h3> <ul class="contains-task-list" data-svelte-h="svelte-xge1gw"><li class="task-list-item"><input type="checkbox" disabled> List Item 1 unchecked</li> <li class="task-list-item"><input type="checkbox" checked disabled> List Item 2 checked</li> <li class="task-list-item"><input type="checkbox" checked disabled> List Item 3 checked<ul class="contains-task-list"><li class="task-list-item"><input type="checkbox" disabled> Sub List Item 1 unchecked</li> <li class="task-list-item"><input type="checkbox" checked disabled> Sub List Item 1 checked</li></ul></li></ul> <h2 id="table" data-svelte-h="svelte-47p9vw"><a href="#table">Table</a></h2> <div class="overflow-x-auto mb-4"><table class="table w-full"><thead data-svelte-h="svelte-gczjan"><tr><th>Table Header 1</th> <th>Table Header 2</th> <th>Table Header 3</th></tr></thead> <tbody data-svelte-h="svelte-idip7f"><tr><td>Division 1</td> <td>Division 2</td> <td>Division 3</td></tr> <tr><td>Division 1</td> <td>Division 2</td> <td>Division 3</td></tr> <tr><td>Division 1</td> <td>Division 2</td> <td>Division 3</td></tr></tbody></table></div> <div class="overflow-x-auto mb-4"><table class="table w-full"><thead data-svelte-h="svelte-7vsuop"><tr><th align="left">Table Header 1</th> <th align="center">Table Header 2</th> <th align="right">Table Header 3</th></tr></thead> <tbody data-svelte-h="svelte-16i6pl9"><tr><td align="left">Division 1</td> <td align="center">Division 2</td> <td align="right">Division 3</td></tr> <tr><td align="left">Division 1</td> <td align="center">Division 2</td> <td align="right">Division 3</td></tr> <tr><td align="left">Division 1</td> <td align="center">Division 2</td> <td align="right">Division 3</td></tr></tbody></table></div> <p data-svelte-h="svelte-11pdwd8"><a href="#headings">scrollToTop</a></p> <h2 id="footnotes" data-svelte-h="svelte-u5fi6x"><a href="#footnotes">Footnotes</a></h2> <p data-svelte-h="svelte-jidotm">Here is a footnote reference. <sup id="fnref-1"><a href="#fn-1" class="footnote-ref">1</a></sup></p> <p data-svelte-h="svelte-fsvclw">This is a long note. <sup id="fnref-longnote"><a href="#fn-longnote" class="footnote-ref">longnote</a></sup></p> <p data-svelte-h="svelte-xyllmn">This is an inline note. <sup id="fnref-2"><a href="#fn-2" class="footnote-ref">2</a></sup></p> <p data-svelte-h="svelte-11pdwd8"><a href="#headings">scrollToTop</a></p> <h2 id="code" data-svelte-h="svelte-1gehoc9"><a href="#code">Code</a></h2> <!-- HTML_TAG_START --><pre class="shiki material-default with-title twoslash lsp" ts="true" title="examples/index.ts"><div class='code-title'>examples/index.ts</div><div class="language-id">ts</div><div class='code-container'><code><div class='line'>for (let <data-lsp lsp='let x: string' >x</data-lsp> in [0]) <data-lsp lsp='var console: Console' >console</data-lsp>.<data-lsp lsp='(method) Console.log(...data: any[]): void' >log</data-lsp>(<data-lsp lsp='let x: string' >x</data-lsp>)</div></code></div></pre><!-- HTML_TAG_END --> <!-- HTML_TAG_START --><pre class="shiki material-default twoslash lsp" ts="true"><div class="language-id">ts</div><div class='code-container'><code><div class='line highlight'>interface IdLabel &#123;</div><div class='line highlight'>  id: number /* some fields */</div><div class='line highlight'>&#125;</div><div class='line highlight'>interface NameLabel &#123;</div><div class='line highlight'>  name<data-lsp lsp='let a: NameLabel' ></data-lsp>: string /* other fields */</div><div class='line highlight'>&#125;</div><div class='line dim'>type NameOrId&lt;T extends number | string&gt; = T extends number ? IdLabel : NameLabel</div><div class='line dim'>// This comment should not be included</div><div class='line dim'>&nbsp;</div><div class='line dim'>// ---cut---</div><div class='line dim'>function createLabel&lt;T extends number | string&gt;(idOrName: T): NameOrId&lt;T&gt; &#123;</div><div class='line dim'>  throw &apos;unimplemented&apos;</div><div class='line dim'>&#125;</div><div class='line dim'>&nbsp;</div><div class='line dim'>let a = createLabel(&apos;typescript&apos;)</div></code></div></pre><!-- HTML_TAG_END --> <h2 id="misc" data-svelte-h="svelte-1n59eic"><a href="#misc">Misc</a></h2> <sup data-svelte-h="svelte-17o8npf">Lorem</sup> <sub data-svelte-h="svelte-1h4d230">ipsum</sub> <cite data-svelte-h="svelte-2sv5mx">dolor sit amet</cite>, <acronym title="Consectetur Adipiscing Elit" data-svelte-h="svelte-1bkbv8l">consectetur adipiscing elit</acronym>, <abbr title="Aliqua" data-svelte-h="svelte-1qfm1q8">sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</abbr>. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<br><br> <p data-svelte-h="svelte-d56c1z">リバースカードオープン、エネミーコントローラー！</p> <p data-svelte-h="svelte-i6obr">ライフを 1000 払い、コマンド入力、<kbd>←</kbd> <kbd>→</kbd> <kbd>A</kbd> <kbd>B</kbd>！</p> <p data-svelte-h="svelte-a1w1jh">このコマンドにより、全てのアニヲタを破壊する！</p> <p data-svelte-h="svelte-11pdwd8"><a href="#headings">scrollToTop</a></p> <h2 id="svelte-components" data-svelte-h="svelte-mjglpj"><a href="#svelte-components">Svelte Components</a></h2>   <div data-testid="general-observer"></div> <br>   <div data-testid="general-observer"></div> <br>   <div data-testid="general-observer"></div> <div class="footnotes" data-svelte-h="svelte-11hrpf6"><hr> <ol><li id="fn-1">Here is the footnote.<a href="#fnref-1" class="footnote-backref">↩</a></li> <li id="fn-longnote">Here’s one footnote with longer identifier.<a href="#fnref-longnote" class="footnote-backref">↩</a></li> <li id="fn-2">You can type footnotes inline, so you don’t have to pick an identifier manually.<a href="#fnref-2" class="footnote-backref">↩</a></li></ol></div>]]>
    </content>
    <category term="Document" scheme="https://shellkaitw.github.io/?tags=Document" />
    <category term="Elements" scheme="https://shellkaitw.github.io/?tags=Elements" />
  </entry>
</feed>